{"ast":null,"code":"/*\r\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\r\n *\r\n *  Use of this source code is governed by a BSD-style license\r\n *  that can be found in the LICENSE file in the root of the source\r\n *  tree.\r\n */\n/* eslint-env node */\n'use strict';\n\nimport _toConsumableArray from \"C:/Users/cnsi-3f-1/Desktop/React/rtsp_to_web/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _defineProperty from \"C:/Users/cnsi-3f-1/Desktop/React/rtsp_to_web/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport * as utils from '../utils';\nexport { shimGetUserMedia } from './getusermedia';\nexport { shimGetDisplayMedia } from './getdisplaymedia';\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent && 'receiver' in window.RTCTrackEvent.prototype && !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get: function get() {\n        return {\n          receiver: this.receiver\n        };\n      }\n    });\n  }\n}\nexport function shimPeerConnection(window, browserDetails) {\n  if (typeof window !== 'object' || !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n  if (browserDetails.version < 53) {\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'].forEach(function (method) {\n      var nativeMethod = window.RTCPeerConnection.prototype[method];\n      var methodObj = _defineProperty({}, method, function () {\n        arguments[0] = new (method === 'addIceCandidate' ? window.RTCIceCandidate : window.RTCSessionDescription)(arguments[0]);\n        return nativeMethod.apply(this, arguments);\n      });\n      window.RTCPeerConnection.prototype[method] = methodObj[method];\n    });\n  }\n  var modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n  var nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    var _arguments = Array.prototype.slice.call(arguments),\n      selector = _arguments[0],\n      onSucc = _arguments[1],\n      onErr = _arguments[2];\n    return nativeGetStats.apply(this, [selector || null]).then(function (stats) {\n      if (browserDetails.version < 53 && !onSucc) {\n        // Shim only promise getStats with spec-hyphens in type names\n        // Leave callback version alone; misc old uses of forEach before Map\n        try {\n          stats.forEach(function (stat) {\n            stat.type = modernStatsTypes[stat.type] || stat.type;\n          });\n        } catch (e) {\n          if (e.name !== 'TypeError') {\n            throw e;\n          }\n          // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n          stats.forEach(function (stat, i) {\n            stats.set(i, Object.assign({}, stat, {\n              type: modernStatsTypes[stat.type] || stat.type\n            }));\n          });\n        }\n      }\n      return stats;\n    }).then(onSucc, onErr);\n  };\n}\nexport function shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection && window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      var _this = this;\n      var senders = origGetSenders.apply(this, []);\n      senders.forEach(function (sender) {\n        return sender._pc = _this;\n      });\n      return senders;\n    };\n  }\n  var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n      var sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function getStats() {\n    return this.track ? this._pc.getStats(this.track) : Promise.resolve(new Map());\n  };\n}\nexport function shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection && window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  var origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n      var _this2 = this;\n      var receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(function (receiver) {\n        return receiver._pc = _this2;\n      });\n      return receivers;\n    };\n  }\n  utils.wrapPeerConnectionEvent(window, 'track', function (e) {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function getStats() {\n    return this._pc.getStats(this.track);\n  };\n}\nexport function shimRemoveStream(window) {\n  if (!window.RTCPeerConnection || 'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n    var _this3 = this;\n    utils.deprecated('removeStream', 'removeTrack');\n    this.getSenders().forEach(function (sender) {\n      if (sender.track && stream.getTracks().includes(sender.track)) {\n        _this3.removeTrack(sender);\n      }\n    });\n  };\n}\nexport function shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\nexport function shimAddTransceiver(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  var origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;\n  if (origAddTransceiver) {\n    window.RTCPeerConnection.prototype.addTransceiver = function addTransceiver() {\n      this.setParametersPromises = [];\n      // WebIDL input coercion and validation\n      var sendEncodings = arguments[1] && arguments[1].sendEncodings;\n      if (sendEncodings === undefined) {\n        sendEncodings = [];\n      }\n      sendEncodings = _toConsumableArray(sendEncodings);\n      var shouldPerformCheck = sendEncodings.length > 0;\n      if (shouldPerformCheck) {\n        // If sendEncodings params are provided, validate grammar\n        sendEncodings.forEach(function (encodingParam) {\n          if ('rid' in encodingParam) {\n            var ridRegex = /^[a-z0-9]{0,16}$/i;\n            if (!ridRegex.test(encodingParam.rid)) {\n              throw new TypeError('Invalid RID value provided.');\n            }\n          }\n          if ('scaleResolutionDownBy' in encodingParam) {\n            if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) {\n              throw new RangeError('scale_resolution_down_by must be >= 1.0');\n            }\n          }\n          if ('maxFramerate' in encodingParam) {\n            if (!(parseFloat(encodingParam.maxFramerate) >= 0)) {\n              throw new RangeError('max_framerate must be >= 0.0');\n            }\n          }\n        });\n      }\n      var transceiver = origAddTransceiver.apply(this, arguments);\n      if (shouldPerformCheck) {\n        // Check if the init options were applied. If not we do this in an\n        // asynchronous way and save the promise reference in a global object.\n        // This is an ugly hack, but at the same time is way more robust than\n        // checking the sender parameters before and after the createOffer\n        // Also note that after the createoffer we are not 100% sure that\n        // the params were asynchronously applied so we might miss the\n        // opportunity to recreate offer.\n        var sender = transceiver.sender;\n        var params = sender.getParameters();\n        if (!('encodings' in params) ||\n        // Avoid being fooled by patched getParameters() below.\n        params.encodings.length === 1 && Object.keys(params.encodings[0]).length === 0) {\n          params.encodings = sendEncodings;\n          sender.sendEncodings = sendEncodings;\n          this.setParametersPromises.push(sender.setParameters(params).then(function () {\n            delete sender.sendEncodings;\n          }).catch(function () {\n            delete sender.sendEncodings;\n          }));\n        }\n      }\n      return transceiver;\n    };\n  }\n}\nexport function shimGetParameters(window) {\n  if (!(typeof window === 'object' && window.RTCRtpSender)) {\n    return;\n  }\n  var origGetParameters = window.RTCRtpSender.prototype.getParameters;\n  if (origGetParameters) {\n    window.RTCRtpSender.prototype.getParameters = function getParameters() {\n      var params = origGetParameters.apply(this, arguments);\n      if (!('encodings' in params)) {\n        params.encodings = [].concat(this.sendEncodings || [{}]);\n      }\n      return params;\n    };\n  }\n}\nexport function shimCreateOffer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  var origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function createOffer() {\n    var _arguments2 = arguments,\n      _this4 = this;\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises).then(function () {\n        return origCreateOffer.apply(_this4, _arguments2);\n      }).finally(function () {\n        _this4.setParametersPromises = [];\n      });\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\nexport function shimCreateAnswer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  var origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;\n  window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {\n    var _arguments3 = arguments,\n      _this5 = this;\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises).then(function () {\n        return origCreateAnswer.apply(_this5, _arguments3);\n      }).finally(function () {\n        _this5.setParametersPromises = [];\n      });\n    }\n    return origCreateAnswer.apply(this, arguments);\n  };\n}","map":{"version":3,"names":["utils","shimGetUserMedia","shimGetDisplayMedia","shimOnTrack","window","RTCTrackEvent","prototype","Object","defineProperty","get","receiver","shimPeerConnection","browserDetails","RTCPeerConnection","mozRTCPeerConnection","version","forEach","method","nativeMethod","methodObj","arguments","RTCIceCandidate","RTCSessionDescription","apply","modernStatsTypes","inboundrtp","outboundrtp","candidatepair","localcandidate","remotecandidate","nativeGetStats","getStats","selector","onSucc","onErr","then","stats","stat","type","e","name","i","set","assign","shimSenderGetStats","RTCRtpSender","origGetSenders","getSenders","senders","sender","_pc","origAddTrack","addTrack","track","Promise","resolve","Map","shimReceiverGetStats","RTCRtpReceiver","origGetReceivers","getReceivers","receivers","wrapPeerConnectionEvent","srcElement","shimRemoveStream","removeStream","stream","deprecated","getTracks","includes","removeTrack","shimRTCDataChannel","DataChannel","RTCDataChannel","shimAddTransceiver","origAddTransceiver","addTransceiver","setParametersPromises","sendEncodings","undefined","shouldPerformCheck","length","encodingParam","ridRegex","test","rid","TypeError","parseFloat","scaleResolutionDownBy","RangeError","maxFramerate","transceiver","params","getParameters","encodings","keys","push","setParameters","catch","shimGetParameters","origGetParameters","concat","shimCreateOffer","origCreateOffer","createOffer","all","finally","shimCreateAnswer","origCreateAnswer","createAnswer"],"sources":["C:/Users/cnsi-3f-1/Desktop/React/rtsp_to_web/node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js"],"sourcesContent":["/*\r\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\r\n *\r\n *  Use of this source code is governed by a BSD-style license\r\n *  that can be found in the LICENSE file in the root of the source\r\n *  tree.\r\n */\r\n/* eslint-env node */\r\n'use strict';\r\n\r\nimport * as utils from '../utils';\r\nexport {shimGetUserMedia} from './getusermedia';\r\nexport {shimGetDisplayMedia} from './getdisplaymedia';\r\n\r\nexport function shimOnTrack(window) {\r\n  if (typeof window === 'object' && window.RTCTrackEvent &&\r\n      ('receiver' in window.RTCTrackEvent.prototype) &&\r\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\r\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\r\n      get() {\r\n        return {receiver: this.receiver};\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function shimPeerConnection(window, browserDetails) {\r\n  if (typeof window !== 'object' ||\r\n      !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\r\n    return; // probably media.peerconnection.enabled=false in about:config\r\n  }\r\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\r\n    // very basic support for old versions.\r\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\r\n  }\r\n\r\n  if (browserDetails.version < 53) {\r\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\r\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\r\n        .forEach(function(method) {\r\n          const nativeMethod = window.RTCPeerConnection.prototype[method];\r\n          const methodObj = {[method]() {\r\n            arguments[0] = new ((method === 'addIceCandidate') ?\r\n                window.RTCIceCandidate :\r\n                window.RTCSessionDescription)(arguments[0]);\r\n            return nativeMethod.apply(this, arguments);\r\n          }};\r\n          window.RTCPeerConnection.prototype[method] = methodObj[method];\r\n        });\r\n  }\r\n\r\n  const modernStatsTypes = {\r\n    inboundrtp: 'inbound-rtp',\r\n    outboundrtp: 'outbound-rtp',\r\n    candidatepair: 'candidate-pair',\r\n    localcandidate: 'local-candidate',\r\n    remotecandidate: 'remote-candidate'\r\n  };\r\n\r\n  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;\r\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\r\n    const [selector, onSucc, onErr] = arguments;\r\n    return nativeGetStats.apply(this, [selector || null])\r\n      .then(stats => {\r\n        if (browserDetails.version < 53 && !onSucc) {\r\n          // Shim only promise getStats with spec-hyphens in type names\r\n          // Leave callback version alone; misc old uses of forEach before Map\r\n          try {\r\n            stats.forEach(stat => {\r\n              stat.type = modernStatsTypes[stat.type] || stat.type;\r\n            });\r\n          } catch (e) {\r\n            if (e.name !== 'TypeError') {\r\n              throw e;\r\n            }\r\n            // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\r\n            stats.forEach((stat, i) => {\r\n              stats.set(i, Object.assign({}, stat, {\r\n                type: modernStatsTypes[stat.type] || stat.type\r\n              }));\r\n            });\r\n          }\r\n        }\r\n        return stats;\r\n      })\r\n      .then(onSucc, onErr);\r\n  };\r\n}\r\n\r\nexport function shimSenderGetStats(window) {\r\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\r\n      window.RTCRtpSender)) {\r\n    return;\r\n  }\r\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\r\n    return;\r\n  }\r\n  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\r\n  if (origGetSenders) {\r\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\r\n      const senders = origGetSenders.apply(this, []);\r\n      senders.forEach(sender => sender._pc = this);\r\n      return senders;\r\n    };\r\n  }\r\n\r\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\r\n  if (origAddTrack) {\r\n    window.RTCPeerConnection.prototype.addTrack = function addTrack() {\r\n      const sender = origAddTrack.apply(this, arguments);\r\n      sender._pc = this;\r\n      return sender;\r\n    };\r\n  }\r\n  window.RTCRtpSender.prototype.getStats = function getStats() {\r\n    return this.track ? this._pc.getStats(this.track) :\r\n        Promise.resolve(new Map());\r\n  };\r\n}\r\n\r\nexport function shimReceiverGetStats(window) {\r\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\r\n      window.RTCRtpSender)) {\r\n    return;\r\n  }\r\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\r\n    return;\r\n  }\r\n  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\r\n  if (origGetReceivers) {\r\n    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\r\n      const receivers = origGetReceivers.apply(this, []);\r\n      receivers.forEach(receiver => receiver._pc = this);\r\n      return receivers;\r\n    };\r\n  }\r\n  utils.wrapPeerConnectionEvent(window, 'track', e => {\r\n    e.receiver._pc = e.srcElement;\r\n    return e;\r\n  });\r\n  window.RTCRtpReceiver.prototype.getStats = function getStats() {\r\n    return this._pc.getStats(this.track);\r\n  };\r\n}\r\n\r\nexport function shimRemoveStream(window) {\r\n  if (!window.RTCPeerConnection ||\r\n      'removeStream' in window.RTCPeerConnection.prototype) {\r\n    return;\r\n  }\r\n  window.RTCPeerConnection.prototype.removeStream =\r\n    function removeStream(stream) {\r\n      utils.deprecated('removeStream', 'removeTrack');\r\n      this.getSenders().forEach(sender => {\r\n        if (sender.track && stream.getTracks().includes(sender.track)) {\r\n          this.removeTrack(sender);\r\n        }\r\n      });\r\n    };\r\n}\r\n\r\nexport function shimRTCDataChannel(window) {\r\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\r\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\r\n  if (window.DataChannel && !window.RTCDataChannel) {\r\n    window.RTCDataChannel = window.DataChannel;\r\n  }\r\n}\r\n\r\nexport function shimAddTransceiver(window) {\r\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\r\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\r\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\r\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\r\n    return;\r\n  }\r\n  const origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;\r\n  if (origAddTransceiver) {\r\n    window.RTCPeerConnection.prototype.addTransceiver =\r\n      function addTransceiver() {\r\n        this.setParametersPromises = [];\r\n        // WebIDL input coercion and validation\r\n        let sendEncodings = arguments[1] && arguments[1].sendEncodings;\r\n        if (sendEncodings === undefined) {\r\n          sendEncodings = [];\r\n        }\r\n        sendEncodings = [...sendEncodings];\r\n        const shouldPerformCheck = sendEncodings.length > 0;\r\n        if (shouldPerformCheck) {\r\n          // If sendEncodings params are provided, validate grammar\r\n          sendEncodings.forEach((encodingParam) => {\r\n            if ('rid' in encodingParam) {\r\n              const ridRegex = /^[a-z0-9]{0,16}$/i;\r\n              if (!ridRegex.test(encodingParam.rid)) {\r\n                throw new TypeError('Invalid RID value provided.');\r\n              }\r\n            }\r\n            if ('scaleResolutionDownBy' in encodingParam) {\r\n              if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) {\r\n                throw new RangeError('scale_resolution_down_by must be >= 1.0');\r\n              }\r\n            }\r\n            if ('maxFramerate' in encodingParam) {\r\n              if (!(parseFloat(encodingParam.maxFramerate) >= 0)) {\r\n                throw new RangeError('max_framerate must be >= 0.0');\r\n              }\r\n            }\r\n          });\r\n        }\r\n        const transceiver = origAddTransceiver.apply(this, arguments);\r\n        if (shouldPerformCheck) {\r\n          // Check if the init options were applied. If not we do this in an\r\n          // asynchronous way and save the promise reference in a global object.\r\n          // This is an ugly hack, but at the same time is way more robust than\r\n          // checking the sender parameters before and after the createOffer\r\n          // Also note that after the createoffer we are not 100% sure that\r\n          // the params were asynchronously applied so we might miss the\r\n          // opportunity to recreate offer.\r\n          const {sender} = transceiver;\r\n          const params = sender.getParameters();\r\n          if (!('encodings' in params) ||\r\n              // Avoid being fooled by patched getParameters() below.\r\n              (params.encodings.length === 1 &&\r\n               Object.keys(params.encodings[0]).length === 0)) {\r\n            params.encodings = sendEncodings;\r\n            sender.sendEncodings = sendEncodings;\r\n            this.setParametersPromises.push(sender.setParameters(params)\r\n              .then(() => {\r\n                delete sender.sendEncodings;\r\n              }).catch(() => {\r\n                delete sender.sendEncodings;\r\n              })\r\n            );\r\n          }\r\n        }\r\n        return transceiver;\r\n      };\r\n  }\r\n}\r\n\r\nexport function shimGetParameters(window) {\r\n  if (!(typeof window === 'object' && window.RTCRtpSender)) {\r\n    return;\r\n  }\r\n  const origGetParameters = window.RTCRtpSender.prototype.getParameters;\r\n  if (origGetParameters) {\r\n    window.RTCRtpSender.prototype.getParameters =\r\n      function getParameters() {\r\n        const params = origGetParameters.apply(this, arguments);\r\n        if (!('encodings' in params)) {\r\n          params.encodings = [].concat(this.sendEncodings || [{}]);\r\n        }\r\n        return params;\r\n      };\r\n  }\r\n}\r\n\r\nexport function shimCreateOffer(window) {\r\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\r\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\r\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\r\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\r\n    return;\r\n  }\r\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\r\n  window.RTCPeerConnection.prototype.createOffer = function createOffer() {\r\n    if (this.setParametersPromises && this.setParametersPromises.length) {\r\n      return Promise.all(this.setParametersPromises)\r\n      .then(() => {\r\n        return origCreateOffer.apply(this, arguments);\r\n      })\r\n      .finally(() => {\r\n        this.setParametersPromises = [];\r\n      });\r\n    }\r\n    return origCreateOffer.apply(this, arguments);\r\n  };\r\n}\r\n\r\nexport function shimCreateAnswer(window) {\r\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\r\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\r\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\r\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\r\n    return;\r\n  }\r\n  const origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;\r\n  window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {\r\n    if (this.setParametersPromises && this.setParametersPromises.length) {\r\n      return Promise.all(this.setParametersPromises)\r\n      .then(() => {\r\n        return origCreateAnswer.apply(this, arguments);\r\n      })\r\n      .finally(() => {\r\n        this.setParametersPromises = [];\r\n      });\r\n    }\r\n    return origCreateAnswer.apply(this, arguments);\r\n  };\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}