{"ast":null,"code":"import _objectSpread from \"C:/Users/cnsi-3f-1/Desktop/React/rtsp_to_web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"C:/Users/cnsi-3f-1/Desktop/React/rtsp_to_web/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/cnsi-3f-1/Desktop/React/rtsp_to_web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/cnsi-3f-1/Desktop/React/rtsp_to_web/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/cnsi-3f-1/Desktop/React/rtsp_to_web/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from \"C:/Users/cnsi-3f-1/Desktop/React/rtsp_to_web/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport 'webrtc-adapter';\nimport Hls from 'hls.js/dist/hls.light.min.js';\nimport './rtsp-to-web-player.css';\nvar RTSPtoWEBPlayer = /*#__PURE__*/function () {\n  //checkStalled\n\n  function RTSPtoWEBPlayer(options) {\n    var _this = this;\n    _classCallCheck(this, RTSPtoWEBPlayer);\n    _defineProperty(this, \"timeout\", null);\n    _defineProperty(this, \"checktime\", null);\n    _defineProperty(this, \"checktimecounter\", 0);\n    _defineProperty(this, \"MSE\", null);\n    _defineProperty(this, \"MSEStreamingStarted\", false);\n    _defineProperty(this, \"MSESourceBuffer\", null);\n    _defineProperty(this, \"turn\", []);\n    _defineProperty(this, \"codec\", null);\n    _defineProperty(this, \"webSocket\", null);\n    _defineProperty(this, \"webrtc\", null);\n    _defineProperty(this, \"currentPlayerType\", null);\n    _defineProperty(this, \"hidden\", \"hidden\");\n    _defineProperty(this, \"paused\", false);\n    _defineProperty(this, \"options\", {\n      parentElement: null,\n      source: null,\n      controls: true,\n      muted: true,\n      autoplay: true,\n      loop: false,\n      hlsjsconfig: {},\n      webrtcconfig: {\n        iceServers: [{\n          urls: [\"stun:stun.l.google.com:19302\"]\n        }],\n        sdpSemantics: \"unified-plan\",\n        bundlePolicy: \"max-compat\"\n        //iceTransportPolicy: \"relay\",//for option \"relay\" need use  turn server\n      },\n\n      debug: false\n    });\n    _defineProperty(this, \"createElements\", function () {\n      //video\n      _this.video = document.createElement(\"video\");\n      _this.video.setAttribute('playsinline', '');\n      _this.options.controls ? _this.video.setAttribute('controls', '') : 0;\n      _this.options.muted ? _this.video.setAttribute('muted', '') : 0;\n      _this.options.autoplay ? _this.video.setAttribute('autoplay', '') : 0;\n      _this.options.loop ? _this.video.setAttribute('loop', '') : 0;\n      _this.addVideoListeners();\n      //wrapper\n      _this.player = document.createElement(\"div\");\n      _this.player.classList.add('RTSPtoWEBPlayer');\n      _this.player.append(_this.video);\n    });\n    _defineProperty(this, \"attachTo\", function (element) {\n      _this.options.parentElement = element;\n      _this.options.parentElement.innerHTML = \"\";\n      _this.options.parentElement.append(_this.player);\n      if (_this.options.source) {\n        _this.load(_this.options.source);\n      }\n    });\n    _defineProperty(this, \"load\", function (source) {\n      _this.options.source = source;\n      _this.destroy();\n      var sourceType = new URL(_this.options.source);\n      if (sourceType.protocol === 'http:' || sourceType.protocol === 'https:') {\n        if (_this.options.source.indexOf('m3u8') !== -1) {\n          _this.currentPlayerType = \"hls\";\n          _this.hlsPlayer();\n        } else if (_this.options.source.indexOf('.mp4') !== -1) {\n          _this.currentPlayerType = \"mp4\";\n          _this.mp4Player();\n        } else {\n          _this.currentPlayerType = \"rtc\";\n          _this.webRtcPlayer();\n        }\n      } else if (sourceType.protocol === 'ws:' || sourceType.protocol === 'wss:') {\n        _this.currentPlayerType = \"ws\";\n        _this.msePlayer();\n        console.log(\"load\");\n      } else {\n        _this.currentPlayerType = null;\n      }\n    });\n    _defineProperty(this, \"addMseListeners\", function () {\n      _this.MSE.addEventListener('sourceopen', _this.sourceOpenHandler);\n      console.log(\"source open\");\n    });\n    _defineProperty(this, \"sourceOpenHandler\", function () {\n      _this.websocketEvents();\n    });\n    _defineProperty(this, \"websocketEvents\", function () {\n      console.log(\"웹소켓 연결\");\n      _this.webSocket = new WebSocket(_this.options.source);\n      _this.webSocket.binaryType = \"arraybuffer\";\n      _this.webSocket.onclose = function () {\n        console.log(\"웹소켓 onclose\");\n        _this.webSocket.onmessage = null;\n      };\n      _this.webSocket.onmessage = function (_ref) {\n        var data = _ref.data;\n        _this.checkStalled();\n        if (_this.codec === null) {\n          if (typeof data === \"object\") {\n            _this.codec = new TextDecoder(\"utf-8\").decode(new Uint8Array(data).slice(1));\n            console.log(\"codec: \", _this.codec);\n          } else {}\n          _this.MSESourceBuffer = _this.MSE.addSourceBuffer(\"video/mp4; codecs=\\\"\".concat(_this.codec, \"\\\"\"));\n          _this.MSESourceBuffer.mode = \"segments\";\n          _this.MSESourceBuffer.addEventListener(\"updateend\", _this.pushPacket);\n        } else {\n          if (!_this.paused) {\n            _this.readPacket(data);\n          }\n        }\n        if (document[_this.hidden] && _this.video.buffered.length) {\n          _this.video.currentTime = _this.video.buffered.end(_this.video.buffered.length - 1) - 1;\n        }\n      };\n    });\n    _defineProperty(this, \"readPacket\", function (packet) {\n      if (!_this.MSEStreamingStarted) {\n        try {\n          _this.MSESourceBuffer.appendBuffer(packet);\n          _this.MSEStreamingStarted = true;\n        } catch (e) {\n          console.log(e);\n        }\n        return;\n      }\n      _this.turn.push(packet);\n      _this.pushPacket();\n    });\n    _defineProperty(this, \"pushPacket\", function () {\n      if (!_this.MSESourceBuffer.updating) {\n        if (_this.turn.length > 0) {\n          var packet = _this.turn.shift();\n          try {\n            _this.MSESourceBuffer.appendBuffer(packet);\n          } catch (err) {\n            _this.debugLogger(err);\n          }\n        } else {\n          _this.MSEStreamingStarted = false;\n        }\n      }\n    });\n    _defineProperty(this, \"checkStalled\", function () {\n      //console.log(\"currentTime: \", currentTime, \" / checktimecounter: \", checktimecounter)\n      if (!!_this.video.currentTime) {\n        if (_this.video.currentTime == _this.checktime) {\n          _this.checktimecounter += 1;\n        } else {\n          _this.checktimecounter = 0;\n        }\n      }\n      if (_this.checktimecounter > 10) {\n        console.log(\"checktimecounter 10 TIMES!!\");\n        //his.video.pause();\n        //this.video.removeAttribute('src'); // empty source\n        //this.video.load();\n        //this.msePlayer();\n        //this.video.play();\n        console.log(_this.checktimecounter);\n\n        //this.webSocket.close(1000);\n        _this.destroy();\n        //this.msePlayer();\n\n        // this.video.addEventListener('play', () => {\n        //     this.paused=false\n        //     console.log(\"addEventListener: play()\")\n        // });\n      }\n\n      _this.checktime = _this.video.currentTime;\n\n      //       this.destroy = function() {\n      //         console.log(\"checkStalled destroy\")\n      //         if (this.timeout != null) {\n      //           clearInterval(this.timeout);\n      //         }\n      //         if (this.ws != null) {\n      //             console.log(\"this.ws != null\")\n      //           this.ws.onclose = null;\n      //           this.ws.close(1000, \"stop streaming\");\n      //         }\n      // }\n    });\n    _defineProperty(this, \"mp4Player\", function () {\n      _this.video.src = _this.options.source;\n    });\n    _defineProperty(this, \"msePlayer\", function () {\n      console.log(\"msePlayer()\");\n      _this.MSE = new MediaSource();\n      _this.video.src = window.URL.createObjectURL(_this.MSE);\n      _this.addMseListeners();\n    });\n    _defineProperty(this, \"hlsPlayer\", function () {\n      if (_this.video.canPlayType('application/vnd.apple.mpegurl')) {\n        _this.video.src = _this.options.source;\n      } else if (Hls.isSupported()) {\n        _this.hls = new Hls(_this.options.hlsjsconfig);\n        _this.hls.loadSource(_this.options.source);\n        _this.hls.attachMedia(_this.video);\n      } else {\n        console.warn('UNSUPPOERED MEDIA SOURCE');\n      }\n    });\n    _defineProperty(this, \"webRtcPlayer\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var offer;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.mediaStream = new MediaStream();\n              _this.video.srcObject = _this.mediaStream;\n              _this.webrtc = new RTCPeerConnection(_this.options.webrtcconfig);\n              _this.webrtc.onnegotiationneeded = _this.handleNegotiationNeeded;\n              _this.webrtc.onsignalingstatechange = _this.signalingstatechange;\n              _this.webrtc.onicegatheringstatechange = _this.icegatheringstatechange;\n              _this.webrtc.onicecandidate = _this.icecandidate;\n              _this.webrtc.onicecandidateerror = _this.icecandidateerror;\n              _this.webrtc.onconnectionstatechange = _this.connectionstatechange;\n              _this.webrtc.oniceconnectionstatechange = _this.iceconnectionstatechange;\n              _this.webrtc.ontrack = _this.onTrack;\n              _context.next = 13;\n              return _this.webrtc.createOffer({\n                //iceRestart:true,\n                offerToReceiveAudio: true,\n                offerToReceiveVideo: true\n              });\n            case 13:\n              offer = _context.sent;\n              _context.next = 16;\n              return _this.webrtc.setLocalDescription(offer);\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n    _defineProperty(this, \"handleNegotiationNeeded\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              /*\r\n              * in this project this handler is not needed, but in another it can be useful\r\n              */\n              _this.debugLogger('handleNegotiationNeeded');\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })));\n    _defineProperty(this, \"signalingstatechange\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var suuid, formData, response, remoteDescription;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.t0 = _this.webrtc.signalingState;\n              _context3.next = _context3.t0 === 'have-local-offer' ? 3 : _context3.t0 === 'stable' ? 16 : _context3.t0 === 'closed' ? 17 : 20;\n              break;\n            case 3:\n              suuid = new URL(_this.options.source).pathname.split('/').slice(-1);\n              formData = new FormData();\n              formData.append('data', btoa(_this.webrtc.localDescription.sdp));\n              formData.append('suuid', suuid);\n              _context3.next = 9;\n              return fetch(_this.options.source, {\n                method: 'POST',\n                body: formData\n              });\n            case 9:\n              response = _context3.sent;\n              if (!response.ok) {\n                _context3.next = 15;\n                break;\n              }\n              _context3.next = 13;\n              return response.text();\n            case 13:\n              remoteDescription = _context3.sent;\n              _this.webrtc.setRemoteDescription(new RTCSessionDescription({\n                type: 'answer',\n                sdp: atob(remoteDescription)\n              }));\n            case 15:\n              return _context3.abrupt(\"break\", 22);\n            case 16:\n              return _context3.abrupt(\"break\", 22);\n            case 17:\n              /*\r\n               * The RTCPeerConnection has been closed.\r\n               */\n              _this.destroy();\n              console.log(\"case : 'closed'\");\n              return _context3.abrupt(\"break\", 22);\n            case 20:\n              console.log(\"unhandled signalingState is \".concat(_this.webrtc.signalingState));\n              return _context3.abrupt(\"break\", 22);\n            case 22:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    })));\n    _defineProperty(this, \"icegatheringstatechange\", function () {\n      switch (_this.webrtc.iceGatheringState) {\n        case \"gathering\":\n          /* collection of candidates has begun */\n          _this.debugLogger('collection of candidates has begun');\n          break;\n        case \"complete\":\n          /* collection of candidates is finished */\n          _this.debugLogger('collection of candidates is finished');\n          break;\n      }\n    });\n    _defineProperty(this, \"icecandidate\", function (event) {\n      if (!event.candidate) {\n        //send to signal\n        //let candidate=new RTCIceCandidate(event.candidate);\n      }\n    });\n    _defineProperty(this, \"icecandidateerror\", function (event) {\n      _this.debugLogger('icecandidateerror\\n', \"hostCandidate: \".concat(event.hostCandidate, \" CODE: \").concat(event.errorCode, \" TEXT: \").concat(event.errorText));\n    });\n    _defineProperty(this, \"connectionstatechange\", function () {\n      switch (_this.webrtc.connectionState) {\n        case \"new\":\n        case \"connected\":\n          _this.debugLogger(\"connected\");\n          break;\n        case \"disconnected\":\n          _this.debugLogger(\"disconnected...\");\n          break;\n        case \"closed\":\n          _this.debugLogger(\"Offline\");\n          break;\n        case \"failed\":\n          _this.debugLogger(\"Error\");\n          break;\n        default:\n          _this.debugLogger(\"Unhadled state: \".concat(_this.webrtc.connectionState));\n          break;\n      }\n    });\n    _defineProperty(this, \"iceconnectionstatechange\", function () {\n      _this.debugLogger('iceconnectionstatechange\\n', _this.webrtc.iceConnectionState);\n    });\n    _defineProperty(this, \"onTrack\", function (event) {\n      _this.debugLogger('onTrack\\n', _this.webrtc.iceConnectionState);\n      _this.mediaStream.addTrack(event.track);\n    });\n    _defineProperty(this, \"destroy\", function () {\n      _this.codec = null;\n      if (_this.currentPlayerType != null) {\n        switch (_this.currentPlayerType) {\n          case 'hls':\n            if (_this.hls != null) {\n              _this.hls.destroy();\n            }\n            break;\n          case 'rtc':\n            if (_this.webrtc != null) {\n              _this.webrtc.close();\n              _this.webrtc = null;\n              _this.video.srcObject = null;\n              _this.mediaStream = null;\n            }\n            break;\n          case 'ws':\n            console.log(\"destroy()\");\n            _this.webSocket.onerror = null;\n            _this.webSocket.onopen = null;\n            _this.webSocket.onmessage = null;\n            _this.webSocket.onclose = null;\n            _this.webSocket.close(1000, \"stop streaming\");\n            _this.turn = [];\n            break;\n          case 'timeout':\n            clearInterval(_this.timeout);\n          default:\n        }\n        _this.video.pause();\n        _this.video.removeAttribute('src'); // empty source\n        _this.video.load();\n      }\n    });\n    _defineProperty(this, \"addVideoListeners\", function () {\n      _this.video.addEventListener('error', function (e) {\n        _this.debugLogger('[ video listener ]', e);\n        _this.destroy();\n        console.log(\"addEventListener: error()\");\n      });\n      _this.video.addEventListener('play', function () {\n        _this.paused = false;\n        console.log(\"addEventListener: play()\");\n      });\n      _this.video.addEventListener('pause', function () {\n        _this.paused = true;\n        console.log(\"addEventListener: pause()\");\n      }); //\n\n      _this.video.addEventListener('progress', function () {\n        if (_this.currentPlayerType === 'ws' && _this.video.buffered.length > 0) {\n          if (_this.video.currentTime < _this.video.buffered.start(_this.video.buffered.length - 1)) {\n            _this.video.currentTime = _this.video.buffered.end(_this.video.buffered.length - 1) - 1;\n          }\n        }\n      });\n    });\n    _defineProperty(this, \"getImageBase64\", function () {\n      var canvas = document.createElement(\"canvas\");\n      canvas.width = _this.video.videoWidth;\n      canvas.height = _this.video.videoHeight;\n      canvas.getContext('2d').drawImage(_this.video, 0, 0, canvas.width, canvas.height);\n      var dataURL = canvas.toDataURL();\n      canvas.remove();\n      return dataURL;\n    });\n    _defineProperty(this, \"debugLogger\", function () {\n      if (_this.options.debug) {\n        if (_this.options.debug === 'trace') {\n          var _console;\n          (_console = console).trace.apply(_console, arguments);\n        } else {\n          var _console2;\n          (_console2 = console).log.apply(_console2, arguments);\n        }\n      }\n    });\n    this.options = _objectSpread(_objectSpread({}, this.options), options);\n    this.createElements();\n    if (this.options.parentElement) {\n      this.attachTo(this.options.parentElement);\n    }\n    this.defDocumentHidden();\n  }\n  _createClass(RTSPtoWEBPlayer, [{\n    key: \"defDocumentHidden\",\n    value: function defDocumentHidden() {\n      if (typeof document.hidden !== \"undefined\") {\n        this.hidden = \"hidden\";\n      } else if (typeof document.msHidden !== \"undefined\") {\n        this.hidden = \"msHidden\";\n      } else if (typeof document.webkitHidden !== \"undefined\") {\n        this.hidden = \"webkitHidden\";\n      }\n    }\n  }]);\n  return RTSPtoWEBPlayer;\n}();\nexport { RTSPtoWEBPlayer as default };","map":{"version":3,"names":["Hls","RTSPtoWEBPlayer","options","parentElement","source","controls","muted","autoplay","loop","hlsjsconfig","webrtcconfig","iceServers","urls","sdpSemantics","bundlePolicy","debug","video","document","createElement","setAttribute","addVideoListeners","player","classList","add","append","element","innerHTML","load","destroy","sourceType","URL","protocol","indexOf","currentPlayerType","hlsPlayer","mp4Player","webRtcPlayer","msePlayer","console","log","MSE","addEventListener","sourceOpenHandler","websocketEvents","webSocket","WebSocket","binaryType","onclose","onmessage","data","checkStalled","codec","TextDecoder","decode","Uint8Array","slice","MSESourceBuffer","addSourceBuffer","mode","pushPacket","paused","readPacket","hidden","buffered","length","currentTime","end","packet","MSEStreamingStarted","appendBuffer","e","turn","push","updating","shift","err","debugLogger","checktime","checktimecounter","src","MediaSource","window","createObjectURL","addMseListeners","canPlayType","isSupported","hls","loadSource","attachMedia","warn","mediaStream","MediaStream","srcObject","webrtc","RTCPeerConnection","onnegotiationneeded","handleNegotiationNeeded","onsignalingstatechange","signalingstatechange","onicegatheringstatechange","icegatheringstatechange","onicecandidate","icecandidate","onicecandidateerror","icecandidateerror","onconnectionstatechange","connectionstatechange","oniceconnectionstatechange","iceconnectionstatechange","ontrack","onTrack","createOffer","offerToReceiveAudio","offerToReceiveVideo","offer","setLocalDescription","signalingState","suuid","pathname","split","formData","FormData","btoa","localDescription","sdp","fetch","method","body","response","ok","text","remoteDescription","setRemoteDescription","RTCSessionDescription","type","atob","iceGatheringState","event","candidate","hostCandidate","errorCode","errorText","connectionState","iceConnectionState","addTrack","track","close","onerror","onopen","clearInterval","timeout","pause","removeAttribute","start","canvas","width","videoWidth","height","videoHeight","getContext","drawImage","dataURL","toDataURL","remove","trace","createElements","attachTo","defDocumentHidden","msHidden","webkitHidden"],"sources":["C:/Users/cnsi-3f-1/Desktop/React/rtsp_to_web/node_modules/rtsptowebplayer/src/rtsp-to-web-player.js"],"sourcesContent":["import 'webrtc-adapter';\r\nimport Hls from 'hls.js/dist/hls.light.min.js';\r\nimport './rtsp-to-web-player.css';\r\n\r\nexport default class RTSPtoWEBPlayer{\r\n    //checkStalled\r\n    timeout = null;\r\n    checktime = null;\r\n    checktimecounter = 0;\r\n\r\n    MSE = null;\r\n    MSEStreamingStarted=false;\r\n    MSESourceBuffer=null;\r\n    turn=[];\r\n    codec=null;\r\n    webSocket=null;\r\n    webrtc=null;\r\n    currentPlayerType=null;\r\n    hidden = \"hidden\";\r\n    paused=false;\r\n    options={\r\n        parentElement:null,\r\n        source:null,\r\n        controls:true,\r\n        muted:true,\r\n        autoplay:true,\r\n        loop:false,\r\n        hlsjsconfig: {\r\n\r\n        },\r\n        webrtcconfig:{\r\n            iceServers: [\r\n                {urls: [\"stun:stun.l.google.com:19302\"]}\r\n                ],\r\n            sdpSemantics: \"unified-plan\",\r\n            bundlePolicy: \"max-compat\",\r\n            //iceTransportPolicy: \"relay\",//for option \"relay\" need use  turn server\r\n        },\r\n        debug:false\r\n    }\r\n\r\n    constructor(options) {\r\n        this.options={...this.options,...options};\r\n        this.createElements();\r\n        if(this.options.parentElement){\r\n            this.attachTo(this.options.parentElement);\r\n        }\r\n        this.defDocumentHidden();\r\n    }\r\n\r\n    createElements = ()=>{\r\n        //video\r\n        this.video=document.createElement(\"video\");\r\n        this.video.setAttribute('playsinline','')\r\n        this.options.controls ? this.video.setAttribute('controls','') :0;\r\n        this.options.muted ? this.video.setAttribute('muted',''):0;\r\n        this.options.autoplay ? this.video.setAttribute('autoplay',''):0;\r\n        this.options.loop ? this.video.setAttribute('loop',''):0;\r\n        this.addVideoListeners();\r\n        //wrapper\r\n        this.player=document.createElement(\"div\");\r\n        this.player.classList.add('RTSPtoWEBPlayer');\r\n        this.player.append(this.video);\r\n    }\r\n\r\n    attachTo=(element)=>{\r\n        this.options.parentElement=element\r\n        this.options.parentElement.innerHTML=\"\";\r\n        this.options.parentElement.append(this.player);\r\n        if(this.options.source){\r\n            this.load(this.options.source);\r\n        }\r\n    }\r\n\r\n    load = (source)=>{\r\n        this.options.source=source;\r\n        this.destroy();\r\n        const sourceType = new URL(this.options.source);\r\n        if (sourceType.protocol === 'http:' || sourceType.protocol === 'https:') {\r\n            if (this.options.source.indexOf('m3u8') !== -1) {\r\n                this.currentPlayerType = \"hls\";\r\n                this.hlsPlayer();\r\n            }else if(this.options.source.indexOf('.mp4') !== -1){\r\n                this.currentPlayerType = \"mp4\";\r\n                this.mp4Player();\r\n            } else {\r\n                this.currentPlayerType = \"rtc\";\r\n                this.webRtcPlayer();\r\n            }\r\n        } else if (sourceType.protocol === 'ws:' || sourceType.protocol === 'wss:') {\r\n            this.currentPlayerType = \"ws\";\r\n            this.msePlayer();\r\n            console.log(\"load\")\r\n        } else {\r\n            this.currentPlayerType = null;\r\n        }\r\n\r\n    }\r\n\r\n    addMseListeners = () => {\r\n        this.MSE.addEventListener('sourceopen', this.sourceOpenHandler);\r\n        console.log(\"source open\")\r\n    }\r\n\r\n    sourceOpenHandler=()=>{\r\n        this.websocketEvents();\r\n    }\r\n\r\n    websocketEvents=()=>{\r\n        console.log(\"웹소켓 연결\")\r\n        this.webSocket = new WebSocket(this.options.source);\r\n        this.webSocket.binaryType = \"arraybuffer\";\r\n        this.webSocket.onclose = () => {\r\n            console.log(\"웹소켓 onclose\")\r\n            this.webSocket.onmessage=null;\r\n        }\r\n        this.webSocket.onmessage =  ({data}) => {\r\n            this.checkStalled();\r\n            if(this.codec===null){\r\n                if(typeof (data)===\"object\"){\r\n                    this.codec=new TextDecoder(\"utf-8\").decode((new Uint8Array(data)).slice(1));\r\n                    console.log(\"codec: \", this.codec)\r\n                }else{\r\n                }\r\n                this.MSESourceBuffer = this.MSE.addSourceBuffer(`video/mp4; codecs=\"${this.codec}\"`);\r\n                this.MSESourceBuffer.mode = \"segments\";\r\n                this.MSESourceBuffer.addEventListener(\"updateend\", this.pushPacket);\r\n            }else{\r\n                if(!this.paused){\r\n                    this.readPacket(data);\r\n                }\r\n            }\r\n            if (document[this.hidden] && this.video.buffered.length) {\r\n                this.video.currentTime = this.video.buffered.end((this.video.buffered.length - 1)) - 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    readPacket = (packet)=>{\r\n        if (!this.MSEStreamingStarted) {\r\n            try {\r\n                this.MSESourceBuffer.appendBuffer(packet);\r\n                this.MSEStreamingStarted = true;\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n            return;\r\n        }\r\n        this.turn.push(packet);\r\n        this.pushPacket();\r\n    }\r\n\r\n    pushPacket = () => {\r\n        if (!this.MSESourceBuffer.updating) {\r\n            if (this.turn.length > 0) {\r\n                const packet = this.turn.shift();\r\n                try {\r\n                    this.MSESourceBuffer.appendBuffer(packet)\r\n                } catch (err) {\r\n                    this.debugLogger(err);\r\n                }\r\n            } else {\r\n                this.MSEStreamingStarted = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    //checkedStall\r\n    checkStalled = () => {\r\n        //console.log(\"currentTime: \", currentTime, \" / checktimecounter: \", checktimecounter)\r\n        if (!!this.video.currentTime) {\r\n            if (this.video.currentTime == this.checktime) {\r\n              this.checktimecounter += 1;\r\n            } else {\r\n              this.checktimecounter = 0;\r\n            }\r\n          }\r\n          if (this.checktimecounter > 10) {\r\n            console.log(\"checktimecounter 10 TIMES!!\")\r\n            //his.video.pause();\r\n            //this.video.removeAttribute('src'); // empty source\r\n            //this.video.load();\r\n            //this.msePlayer();\r\n            //this.video.play();\r\n            console.log(this.checktimecounter);\r\n\r\n            //this.webSocket.close(1000);\r\n            this.destroy();\r\n            //this.msePlayer();\r\n            \r\n            // this.video.addEventListener('play', () => {\r\n            //     this.paused=false\r\n            //     console.log(\"addEventListener: play()\")\r\n            // });\r\n          }\r\n          this.checktime = this.video.currentTime;\r\n\r\n    //       this.destroy = function() {\r\n    //         console.log(\"checkStalled destroy\")\r\n    //         if (this.timeout != null) {\r\n    //           clearInterval(this.timeout);\r\n    //         }\r\n    //         if (this.ws != null) {\r\n    //             console.log(\"this.ws != null\")\r\n    //           this.ws.onclose = null;\r\n    //           this.ws.close(1000, \"stop streaming\");\r\n    //         }\r\n    // }\r\n}\r\n\r\n    mp4Player=()=>{\r\n        this.video.src=this.options.source;\r\n    }\r\n\r\n    msePlayer =()=>{\r\n        console.log(\"msePlayer()\")\r\n        this.MSE = new MediaSource();\r\n        this.video.src = window.URL.createObjectURL(this.MSE);\r\n        this.addMseListeners();\r\n    }\r\n\r\n    hlsPlayer = ()=>{\r\n        if (this.video.canPlayType('application/vnd.apple.mpegurl')) {\r\n            this.video.src = this.options.source;\r\n        } else if (Hls.isSupported()) {\r\n            this.hls = new Hls(this.options.hlsjsconfig);\r\n            this.hls.loadSource(this.options.source);\r\n            this.hls.attachMedia(this.video);\r\n        }else{\r\n            console.warn('UNSUPPOERED MEDIA SOURCE');\r\n        }\r\n    }\r\n\r\n    webRtcPlayer= async ()=>{\r\n        this.mediaStream = new MediaStream();\r\n        this.video.srcObject = this.mediaStream;\r\n        this.webrtc = new RTCPeerConnection(this.options.webrtcconfig);\r\n        this.webrtc.onnegotiationneeded         =this.handleNegotiationNeeded;\r\n        this.webrtc.onsignalingstatechange      =this.signalingstatechange;\r\n        this.webrtc.onicegatheringstatechange   =this.icegatheringstatechange;\r\n        this.webrtc.onicecandidate              =this.icecandidate;\r\n        this.webrtc.onicecandidateerror         =this.icecandidateerror;\r\n        this.webrtc.onconnectionstatechange     =this.connectionstatechange;\r\n        this.webrtc.oniceconnectionstatechange  =this.iceconnectionstatechange;\r\n        this.webrtc.ontrack = this.onTrack;\r\n\r\n        const offer = await this.webrtc.createOffer({\r\n            //iceRestart:true,\r\n            offerToReceiveAudio:true,\r\n            offerToReceiveVideo:true\r\n        });\r\n        await this.webrtc.setLocalDescription(offer);\r\n    }\r\n\r\n    handleNegotiationNeeded = async ()=>{\r\n        /*\r\n        * in this project this handler is not needed, but in another it can be useful\r\n        */\r\n        this.debugLogger('handleNegotiationNeeded')\r\n    }\r\n\r\n    signalingstatechange = async ()=>{\r\n        switch (this.webrtc.signalingState){\r\n            case 'have-local-offer':\r\n                const suuid=((new URL(this.options.source)).pathname).split('/').slice(-1);\r\n                const formData = new FormData();\r\n                formData.append('data', btoa(this.webrtc.localDescription.sdp));\r\n                formData.append('suuid',suuid);\r\n                const response=await  fetch(this.options.source, {\r\n                    method: 'POST',\r\n                    body: formData\r\n                });\r\n                if(response.ok){\r\n                    const remoteDescription=await response.text();\r\n                    this.webrtc.setRemoteDescription(new RTCSessionDescription({\r\n                        type: 'answer',\r\n                        sdp: atob(remoteDescription)\r\n                    }))\r\n                }\r\n                break;\r\n            case 'stable':\r\n                /*\r\n                * There is no ongoing exchange of offer and answer underway.\r\n                * This may mean that the RTCPeerConnection object is new, in which case both the localDescription and remoteDescription are null;\r\n                * it may also mean that negotiation is complete and a connection has been established.\r\n                */\r\n                break;\r\n\r\n            case 'closed':\r\n                /*\r\n                 * The RTCPeerConnection has been closed.\r\n                 */\r\n                this.destroy();\r\n                console.log(\"case : 'closed'\")\r\n                break;\r\n\r\n            default:\r\n                console.log(`unhandled signalingState is ${this.webrtc.signalingState}`);\r\n                break;\r\n        }\r\n    }\r\n\r\n    icegatheringstatechange =()=>{\r\n        switch(this.webrtc.iceGatheringState) {\r\n            case \"gathering\":\r\n                /* collection of candidates has begun */\r\n                this.debugLogger('collection of candidates has begun');\r\n                break;\r\n            case \"complete\":\r\n                /* collection of candidates is finished */\r\n                this.debugLogger('collection of candidates is finished');\r\n                break;\r\n        }\r\n    }\r\n\r\n    icecandidate = (event)=>{\r\n        if(!event.candidate){\r\n            //send to signal\r\n            //let candidate=new RTCIceCandidate(event.candidate);\r\n        }\r\n    }\r\n\r\n    icecandidateerror=(event)=>{\r\n        this.debugLogger('icecandidateerror\\n',`hostCandidate: ${event.hostCandidate} CODE: ${event.errorCode} TEXT: ${event.errorText}`);\r\n    }\r\n\r\n    connectionstatechange=()=>{\r\n        switch(this.webrtc.connectionState) {\r\n            case \"new\":\r\n            case \"connected\":\r\n                this.debugLogger(\"connected\");\r\n                break;\r\n            case \"disconnected\":\r\n                this.debugLogger(\"disconnected...\");\r\n                break;\r\n            case \"closed\":\r\n                this.debugLogger(\"Offline\");\r\n                break;\r\n            case \"failed\":\r\n                this.debugLogger(\"Error\");\r\n                break;\r\n            default:\r\n                this.debugLogger(`Unhadled state: ${this.webrtc.connectionState}`);\r\n                break;\r\n        }\r\n    }\r\n    iceconnectionstatechange=()=>{\r\n        this.debugLogger('iceconnectionstatechange\\n',this.webrtc.iceConnectionState);\r\n    }\r\n\r\n    onTrack=(event)=>{\r\n        this.debugLogger('onTrack\\n',this.webrtc.iceConnectionState);\r\n        this.mediaStream.addTrack(event.track);\r\n    }\r\n\r\n    destroy=()=>{\r\n        this.codec = null;\r\n        if (this.currentPlayerType != null) {\r\n            switch (this.currentPlayerType) {\r\n                case 'hls':\r\n                    if (this.hls != null) {\r\n                        this.hls.destroy();\r\n                    }\r\n                    break;\r\n\r\n                case 'rtc':\r\n                    if (this.webrtc != null) {\r\n                        this.webrtc.close();\r\n                        this.webrtc = null;\r\n                        this.video.srcObject = null;\r\n                        this.mediaStream = null;\r\n                    }\r\n                    break;\r\n\r\n                case 'ws':\r\n                    console.log(\"destroy()\")\r\n                    this.webSocket.onerror = null;\r\n                    this.webSocket.onopen = null;\r\n                    this.webSocket.onmessage = null;\r\n                    this.webSocket.onclose = null;\r\n                    this.webSocket.close(1000, \"stop streaming\");\r\n                    this.turn=[];\r\n                    break;\r\n\r\n                case 'timeout':   \r\n                    clearInterval(this.timeout);\r\n                default:\r\n            }\r\n            this.video.pause();\r\n            this.video.removeAttribute('src'); // empty source\r\n            this.video.load();\r\n        }\r\n    }\r\n\r\n    addVideoListeners=()=>{\r\n\r\n        this.video.addEventListener('error', (e) => {\r\n            this.debugLogger('[ video listener ]',e)\r\n            this.destroy();\r\n            console.log(\"addEventListener: error()\")\r\n        });\r\n\r\n        this.video.addEventListener('play', () => {\r\n            this.paused=false\r\n            console.log(\"addEventListener: play()\")\r\n        });\r\n\r\n        this.video.addEventListener('pause', () => {\r\n            this.paused=true;\r\n            console.log(\"addEventListener: pause()\")\r\n        });//\r\n\r\n        this.video.addEventListener('progress', () => {\r\n            if(this.currentPlayerType === 'ws' && this.video.buffered.length>0){\r\n                if(this.video.currentTime<this.video.buffered.start(this.video.buffered.length-1)){\r\n                    this.video.currentTime=this.video.buffered.end(this.video.buffered.length-1)-1;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    defDocumentHidden() {\r\n        if (typeof document.hidden !== \"undefined\") {\r\n            this.hidden = \"hidden\";\r\n        } else if (typeof document.msHidden !== \"undefined\") {\r\n            this.hidden = \"msHidden\";\r\n        } else if (typeof document.webkitHidden !== \"undefined\") {\r\n            this.hidden = \"webkitHidden\";\r\n        }\r\n    }\r\n\r\n    getImageBase64 = ()=>{\r\n        const canvas = document.createElement(\"canvas\");\r\n        canvas.width = this.video.videoWidth;\r\n        canvas.height = this.video.videoHeight;\r\n        canvas.getContext('2d').drawImage(this.video, 0, 0, canvas.width, canvas.height);\r\n        const dataURL = canvas.toDataURL();\r\n        canvas.remove();\r\n        return dataURL;\r\n    }\r\n\r\n    debugLogger=(...arg)=>{\r\n        if(this.options.debug){\r\n            if(this.options.debug==='trace'){\r\n                console.trace(...arg)\r\n            }else{\r\n                console.log(...arg)\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}