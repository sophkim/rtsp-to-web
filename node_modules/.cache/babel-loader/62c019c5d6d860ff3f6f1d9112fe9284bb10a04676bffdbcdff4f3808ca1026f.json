{"ast":null,"code":"/*\r\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\r\n *\r\n *  Use of this source code is governed by a BSD-style license\r\n *  that can be found in the LICENSE file in the root of the source\r\n *  tree.\r\n */\n/* eslint-env node */\n'use strict';\n\nimport SDPUtils from 'sdp';\nimport * as utils from './utils';\nexport function shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || window.RTCIceCandidate && 'foundation' in window.RTCIceCandidate.prototype) {\n    return;\n  }\n  var NativeRTCIceCandidate = window.RTCIceCandidate;\n  window.RTCIceCandidate = function RTCIceCandidate(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if (typeof args === 'object' && args.candidate && args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substr(2);\n    }\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      var nativeCandidate = new NativeRTCIceCandidate(args);\n      var parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n      var augmentedCandidate = Object.assign(nativeCandidate, parsedCandidate);\n\n      // Add a serializer that does not serialize the extra attributes.\n      augmentedCandidate.toJSON = function toJSON() {\n        return {\n          candidate: augmentedCandidate.candidate,\n          sdpMid: augmentedCandidate.sdpMid,\n          sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\n          usernameFragment: augmentedCandidate.usernameFragment\n        };\n      };\n      return augmentedCandidate;\n    }\n    return new NativeRTCIceCandidate(args);\n  };\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', function (e) {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n    return e;\n  });\n}\nexport function shimRTCIceCandidateRelayProtocol(window) {\n  if (!window.RTCIceCandidate || window.RTCIceCandidate && 'relayProtocol' in window.RTCIceCandidate.prototype) {\n    return;\n  }\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', function (e) {\n    if (e.candidate) {\n      var parsedCandidate = SDPUtils.parseCandidate(e.candidate.candidate);\n      if (parsedCandidate.type === 'relay') {\n        // This is a libwebrtc-specific mapping of local type preference\n        // to relayProtocol.\n        e.candidate.relayProtocol = {\n          0: 'tls',\n          1: 'tcp',\n          2: 'udp'\n        }[parsedCandidate.priority >> 24];\n      }\n    }\n    return e;\n  });\n}\nexport function shimMaxMessageSize(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get: function get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n  var sctpInDescription = function sctpInDescription(description) {\n    if (!description || !description.sdp) {\n      return false;\n    }\n    var sections = SDPUtils.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(function (mediaSection) {\n      var mLine = SDPUtils.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application' && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n  var getRemoteFirefoxVersion = function getRemoteFirefoxVersion(description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    var match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n    var version = parseInt(match[1], 10);\n    // Test for NaN (yes, this is ugly)\n    return version !== version ? -1 : version;\n  };\n  var getCanSendMaxMessageSize = function getCanSendMaxMessageSize(remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    var canSendMaxMessageSize = 65536;\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize = browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n    return canSendMaxMessageSize;\n  };\n  var getMaxMessageSize = function getMaxMessageSize(description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    var maxMessageSize = 65536;\n\n    // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n    if (browserDetails.browser === 'firefox' && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n    var match = SDPUtils.matchPrefix(description.sdp, 'a=max-message-size:');\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substr(19), 10);\n    } else if (browserDetails.browser === 'firefox' && remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n    return maxMessageSize;\n  };\n  var origSetRemoteDescription = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription() {\n    this._sctp = null;\n    // Chrome decided to not expose .sctp in plan-b mode.\n    // As usual, adapter.js has to do an 'ugly worakaround'\n    // to cover up the mess.\n    if (browserDetails.browser === 'chrome' && browserDetails.version >= 76) {\n      var _this$getConfiguratio = this.getConfiguration(),\n        sdpSemantics = _this$getConfiguratio.sdpSemantics;\n      if (sdpSemantics === 'plan-b') {\n        Object.defineProperty(this, 'sctp', {\n          get: function get() {\n            return typeof this._sctp === 'undefined' ? null : this._sctp;\n          },\n          enumerable: true,\n          configurable: true\n        });\n      }\n    }\n    if (sctpInDescription(arguments[0])) {\n      // Check if the remote is FF.\n      var isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n      // Get the maximum message size the local peer is capable of sending\n      var canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n      // Get the maximum message size of the remote peer.\n      var remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n      // Determine final maximum message size\n      var maxMessageSize;\n      if (canSendMMS === 0 && remoteMMS === 0) {\n        maxMessageSize = Number.POSITIVE_INFINITY;\n      } else if (canSendMMS === 0 || remoteMMS === 0) {\n        maxMessageSize = Math.max(canSendMMS, remoteMMS);\n      } else {\n        maxMessageSize = Math.min(canSendMMS, remoteMMS);\n      }\n\n      // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n      // attribute.\n      var sctp = {};\n      Object.defineProperty(sctp, 'maxMessageSize', {\n        get: function get() {\n          return maxMessageSize;\n        }\n      });\n      this._sctp = sctp;\n    }\n    return origSetRemoteDescription.apply(this, arguments);\n  };\n}\nexport function shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection && 'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  }\n\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n  function wrapDcSend(dc, pc) {\n    var origDataChannelSend = dc.send;\n    dc.send = function send() {\n      var data = arguments[0];\n      var length = data.length || data.size || data.byteLength;\n      if (dc.readyState === 'open' && pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' + pc.sctp.maxMessageSize + ' bytes)');\n      }\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n  var origCreateDataChannel = window.RTCPeerConnection.prototype.createDataChannel;\n  window.RTCPeerConnection.prototype.createDataChannel = function createDataChannel() {\n    var dataChannel = origCreateDataChannel.apply(this, arguments);\n    wrapDcSend(dataChannel, this);\n    return dataChannel;\n  };\n  utils.wrapPeerConnectionEvent(window, 'datachannel', function (e) {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\r\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\r\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\r\n * since DTLS failures would be hidden. See\r\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\r\n * for the Firefox tracking bug.\r\n */\nexport function shimConnectionState(window) {\n  if (!window.RTCPeerConnection || 'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  var proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get: function get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get: function get() {\n      return this._onconnectionstatechange || null;\n    },\n    set: function set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange', this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n      if (cb) {\n        this.addEventListener('connectionstatechange', this._onconnectionstatechange = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  ['setLocalDescription', 'setRemoteDescription'].forEach(function (method) {\n    var origMethod = proto[method];\n    proto[method] = function () {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = function (e) {\n          var pc = e.target;\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            var newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n          return e;\n        };\n        this.addEventListener('iceconnectionstatechange', this._connectionstatechangepoly);\n      }\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\nexport function removeExtmapAllowMixed(window, browserDetails) {\n  /* remove a=extmap-allow-mixed for webrtc.org < M71 */\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\n    return;\n  }\n  if (browserDetails.browser === 'safari' && browserDetails.version >= 605) {\n    return;\n  }\n  var nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription(desc) {\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n      var sdp = desc.sdp.split('\\n').filter(function (line) {\n        return line.trim() !== 'a=extmap-allow-mixed';\n      }).join('\\n');\n      // Safari enforces read-only-ness of RTCSessionDescription fields.\n      if (window.RTCSessionDescription && desc instanceof window.RTCSessionDescription) {\n        arguments[0] = new window.RTCSessionDescription({\n          type: desc.type,\n          sdp: sdp\n        });\n      } else {\n        desc.sdp = sdp;\n      }\n    }\n    return nativeSRD.apply(this, arguments);\n  };\n}\nexport function shimAddIceCandidateNullOrEmpty(window, browserDetails) {\n  // Support for addIceCandidate(null or undefined)\n  // as well as addIceCandidate({candidate: \"\", ...})\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=978582\n  // Note: must be called before other polyfills which change the signature.\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  var nativeAddIceCandidate = window.RTCPeerConnection.prototype.addIceCandidate;\n  if (!nativeAddIceCandidate || nativeAddIceCandidate.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.addIceCandidate = function addIceCandidate() {\n    if (!arguments[0]) {\n      if (arguments[1]) {\n        arguments[1].apply(null);\n      }\n      return Promise.resolve();\n    }\n    // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n    // in older versions.\n    // Native support for ignoring exists for Chrome M77+.\n    // Safari ignores as well, exact version unknown but works in the same\n    // version that also ignores addIceCandidate(null).\n    if ((browserDetails.browser === 'chrome' && browserDetails.version < 78 || browserDetails.browser === 'firefox' && browserDetails.version < 68 || browserDetails.browser === 'safari') && arguments[0] && arguments[0].candidate === '') {\n      return Promise.resolve();\n    }\n    return nativeAddIceCandidate.apply(this, arguments);\n  };\n}\n\n// Note: Make sure to call this ahead of APIs that modify\n// setLocalDescription.length\nexport function shimParameterlessSetLocalDescription(window, browserDetails) {\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  var nativeSetLocalDescription = window.RTCPeerConnection.prototype.setLocalDescription;\n  if (!nativeSetLocalDescription || nativeSetLocalDescription.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.setLocalDescription = function setLocalDescription() {\n    var _this = this;\n    var desc = arguments[0] || {};\n    if (typeof desc !== 'object' || desc.type && desc.sdp) {\n      return nativeSetLocalDescription.apply(this, arguments);\n    }\n    // The remaining steps should technically happen when SLD comes off the\n    // RTCPeerConnection's operations chain (not ahead of going on it), but\n    // this is too difficult to shim. Instead, this shim only covers the\n    // common case where the operations chain is empty. This is imperfect, but\n    // should cover many cases. Rationale: Even if we can't reduce the glare\n    // window to zero on imperfect implementations, there's value in tapping\n    // into the perfect negotiation pattern that several browsers support.\n    desc = {\n      type: desc.type,\n      sdp: desc.sdp\n    };\n    if (!desc.type) {\n      switch (this.signalingState) {\n        case 'stable':\n        case 'have-local-offer':\n        case 'have-remote-pranswer':\n          desc.type = 'offer';\n          break;\n        default:\n          desc.type = 'answer';\n          break;\n      }\n    }\n    if (desc.sdp || desc.type !== 'offer' && desc.type !== 'answer') {\n      return nativeSetLocalDescription.apply(this, [desc]);\n    }\n    var func = desc.type === 'offer' ? this.createOffer : this.createAnswer;\n    return func.apply(this).then(function (d) {\n      return nativeSetLocalDescription.apply(_this, [d]);\n    });\n  };\n}","map":{"version":3,"names":["SDPUtils","utils","shimRTCIceCandidate","window","RTCIceCandidate","prototype","NativeRTCIceCandidate","args","candidate","indexOf","JSON","parse","stringify","substr","length","nativeCandidate","parsedCandidate","parseCandidate","augmentedCandidate","Object","assign","toJSON","sdpMid","sdpMLineIndex","usernameFragment","wrapPeerConnectionEvent","e","defineProperty","value","writable","shimRTCIceCandidateRelayProtocol","type","relayProtocol","priority","shimMaxMessageSize","browserDetails","RTCPeerConnection","get","_sctp","sctpInDescription","description","sdp","sections","splitSections","shift","some","mediaSection","mLine","parseMLine","kind","protocol","getRemoteFirefoxVersion","match","version","parseInt","getCanSendMaxMessageSize","remoteIsFirefox","canSendMaxMessageSize","browser","getMaxMessageSize","maxMessageSize","matchPrefix","origSetRemoteDescription","setRemoteDescription","getConfiguration","sdpSemantics","enumerable","configurable","arguments","isFirefox","canSendMMS","remoteMMS","Number","POSITIVE_INFINITY","Math","max","min","sctp","apply","shimSendThrowTypeError","wrapDcSend","dc","pc","origDataChannelSend","send","data","size","byteLength","readyState","TypeError","origCreateDataChannel","createDataChannel","dataChannel","channel","target","shimConnectionState","proto","completed","checking","iceConnectionState","_onconnectionstatechange","set","cb","removeEventListener","addEventListener","forEach","method","origMethod","_connectionstatechangepoly","_lastConnectionState","connectionState","newEvent","Event","dispatchEvent","removeExtmapAllowMixed","nativeSRD","desc","split","filter","line","trim","join","RTCSessionDescription","shimAddIceCandidateNullOrEmpty","nativeAddIceCandidate","addIceCandidate","Promise","resolve","shimParameterlessSetLocalDescription","nativeSetLocalDescription","setLocalDescription","signalingState","func","createOffer","createAnswer","then","d"],"sources":["C:/Users/cnsi-3f-1/Desktop/React/rtsp_to_web/node_modules/webrtc-adapter/src/js/common_shim.js"],"sourcesContent":["/*\r\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\r\n *\r\n *  Use of this source code is governed by a BSD-style license\r\n *  that can be found in the LICENSE file in the root of the source\r\n *  tree.\r\n */\r\n/* eslint-env node */\r\n'use strict';\r\n\r\nimport SDPUtils from 'sdp';\r\nimport * as utils from './utils';\r\n\r\nexport function shimRTCIceCandidate(window) {\r\n  // foundation is arbitrarily chosen as an indicator for full support for\r\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\r\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in\r\n      window.RTCIceCandidate.prototype)) {\r\n    return;\r\n  }\r\n\r\n  const NativeRTCIceCandidate = window.RTCIceCandidate;\r\n  window.RTCIceCandidate = function RTCIceCandidate(args) {\r\n    // Remove the a= which shouldn't be part of the candidate string.\r\n    if (typeof args === 'object' && args.candidate &&\r\n        args.candidate.indexOf('a=') === 0) {\r\n      args = JSON.parse(JSON.stringify(args));\r\n      args.candidate = args.candidate.substr(2);\r\n    }\r\n\r\n    if (args.candidate && args.candidate.length) {\r\n      // Augment the native candidate with the parsed fields.\r\n      const nativeCandidate = new NativeRTCIceCandidate(args);\r\n      const parsedCandidate = SDPUtils.parseCandidate(args.candidate);\r\n      const augmentedCandidate = Object.assign(nativeCandidate,\r\n          parsedCandidate);\r\n\r\n      // Add a serializer that does not serialize the extra attributes.\r\n      augmentedCandidate.toJSON = function toJSON() {\r\n        return {\r\n          candidate: augmentedCandidate.candidate,\r\n          sdpMid: augmentedCandidate.sdpMid,\r\n          sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\r\n          usernameFragment: augmentedCandidate.usernameFragment,\r\n        };\r\n      };\r\n      return augmentedCandidate;\r\n    }\r\n    return new NativeRTCIceCandidate(args);\r\n  };\r\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\r\n\r\n  // Hook up the augmented candidate in onicecandidate and\r\n  // addEventListener('icecandidate', ...)\r\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\r\n    if (e.candidate) {\r\n      Object.defineProperty(e, 'candidate', {\r\n        value: new window.RTCIceCandidate(e.candidate),\r\n        writable: 'false'\r\n      });\r\n    }\r\n    return e;\r\n  });\r\n}\r\n\r\nexport function shimRTCIceCandidateRelayProtocol(window) {\r\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'relayProtocol' in\r\n      window.RTCIceCandidate.prototype)) {\r\n    return;\r\n  }\r\n\r\n  // Hook up the augmented candidate in onicecandidate and\r\n  // addEventListener('icecandidate', ...)\r\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\r\n    if (e.candidate) {\r\n      const parsedCandidate = SDPUtils.parseCandidate(e.candidate.candidate);\r\n      if (parsedCandidate.type === 'relay') {\r\n        // This is a libwebrtc-specific mapping of local type preference\r\n        // to relayProtocol.\r\n        e.candidate.relayProtocol = {\r\n          0: 'tls',\r\n          1: 'tcp',\r\n          2: 'udp',\r\n        }[parsedCandidate.priority >> 24];\r\n      }\r\n    }\r\n    return e;\r\n  });\r\n}\r\n\r\nexport function shimMaxMessageSize(window, browserDetails) {\r\n  if (!window.RTCPeerConnection) {\r\n    return;\r\n  }\r\n\r\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\r\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\r\n      get() {\r\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\r\n      }\r\n    });\r\n  }\r\n\r\n  const sctpInDescription = function(description) {\r\n    if (!description || !description.sdp) {\r\n      return false;\r\n    }\r\n    const sections = SDPUtils.splitSections(description.sdp);\r\n    sections.shift();\r\n    return sections.some(mediaSection => {\r\n      const mLine = SDPUtils.parseMLine(mediaSection);\r\n      return mLine && mLine.kind === 'application'\r\n          && mLine.protocol.indexOf('SCTP') !== -1;\r\n    });\r\n  };\r\n\r\n  const getRemoteFirefoxVersion = function(description) {\r\n    // TODO: Is there a better solution for detecting Firefox?\r\n    const match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\r\n    if (match === null || match.length < 2) {\r\n      return -1;\r\n    }\r\n    const version = parseInt(match[1], 10);\r\n    // Test for NaN (yes, this is ugly)\r\n    return version !== version ? -1 : version;\r\n  };\r\n\r\n  const getCanSendMaxMessageSize = function(remoteIsFirefox) {\r\n    // Every implementation we know can send at least 64 KiB.\r\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\r\n    //       data does not reach the other peer reliably.\r\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\r\n    let canSendMaxMessageSize = 65536;\r\n    if (browserDetails.browser === 'firefox') {\r\n      if (browserDetails.version < 57) {\r\n        if (remoteIsFirefox === -1) {\r\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\r\n          // fragmentation.\r\n          canSendMaxMessageSize = 16384;\r\n        } else {\r\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\r\n          // messages. Thus, supporting ~2 GiB when sending.\r\n          canSendMaxMessageSize = 2147483637;\r\n        }\r\n      } else if (browserDetails.version < 60) {\r\n        // Currently, all FF >= 57 will reset the remote maximum message size\r\n        // to the default value when a data channel is created at a later\r\n        // stage. :(\r\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\r\n        canSendMaxMessageSize =\r\n          browserDetails.version === 57 ? 65535 : 65536;\r\n      } else {\r\n        // FF >= 60 supports sending ~2 GiB\r\n        canSendMaxMessageSize = 2147483637;\r\n      }\r\n    }\r\n    return canSendMaxMessageSize;\r\n  };\r\n\r\n  const getMaxMessageSize = function(description, remoteIsFirefox) {\r\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\r\n    //       every implementation we know supports receiving 65536 bytes.\r\n    let maxMessageSize = 65536;\r\n\r\n    // FF 57 has a slightly incorrect default remote max message size, so\r\n    // we need to adjust it here to avoid a failure when sending.\r\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\r\n    if (browserDetails.browser === 'firefox'\r\n         && browserDetails.version === 57) {\r\n      maxMessageSize = 65535;\r\n    }\r\n\r\n    const match = SDPUtils.matchPrefix(description.sdp,\r\n      'a=max-message-size:');\r\n    if (match.length > 0) {\r\n      maxMessageSize = parseInt(match[0].substr(19), 10);\r\n    } else if (browserDetails.browser === 'firefox' &&\r\n                remoteIsFirefox !== -1) {\r\n      // If the maximum message size is not present in the remote SDP and\r\n      // both local and remote are Firefox, the remote peer can receive\r\n      // ~2 GiB.\r\n      maxMessageSize = 2147483637;\r\n    }\r\n    return maxMessageSize;\r\n  };\r\n\r\n  const origSetRemoteDescription =\r\n      window.RTCPeerConnection.prototype.setRemoteDescription;\r\n  window.RTCPeerConnection.prototype.setRemoteDescription =\r\n    function setRemoteDescription() {\r\n      this._sctp = null;\r\n      // Chrome decided to not expose .sctp in plan-b mode.\r\n      // As usual, adapter.js has to do an 'ugly worakaround'\r\n      // to cover up the mess.\r\n      if (browserDetails.browser === 'chrome' && browserDetails.version >= 76) {\r\n        const {sdpSemantics} = this.getConfiguration();\r\n        if (sdpSemantics === 'plan-b') {\r\n          Object.defineProperty(this, 'sctp', {\r\n            get() {\r\n              return typeof this._sctp === 'undefined' ? null : this._sctp;\r\n            },\r\n            enumerable: true,\r\n            configurable: true,\r\n          });\r\n        }\r\n      }\r\n\r\n      if (sctpInDescription(arguments[0])) {\r\n        // Check if the remote is FF.\r\n        const isFirefox = getRemoteFirefoxVersion(arguments[0]);\r\n\r\n        // Get the maximum message size the local peer is capable of sending\r\n        const canSendMMS = getCanSendMaxMessageSize(isFirefox);\r\n\r\n        // Get the maximum message size of the remote peer.\r\n        const remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\r\n\r\n        // Determine final maximum message size\r\n        let maxMessageSize;\r\n        if (canSendMMS === 0 && remoteMMS === 0) {\r\n          maxMessageSize = Number.POSITIVE_INFINITY;\r\n        } else if (canSendMMS === 0 || remoteMMS === 0) {\r\n          maxMessageSize = Math.max(canSendMMS, remoteMMS);\r\n        } else {\r\n          maxMessageSize = Math.min(canSendMMS, remoteMMS);\r\n        }\r\n\r\n        // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\r\n        // attribute.\r\n        const sctp = {};\r\n        Object.defineProperty(sctp, 'maxMessageSize', {\r\n          get() {\r\n            return maxMessageSize;\r\n          }\r\n        });\r\n        this._sctp = sctp;\r\n      }\r\n\r\n      return origSetRemoteDescription.apply(this, arguments);\r\n    };\r\n}\r\n\r\nexport function shimSendThrowTypeError(window) {\r\n  if (!(window.RTCPeerConnection &&\r\n      'createDataChannel' in window.RTCPeerConnection.prototype)) {\r\n    return;\r\n  }\r\n\r\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\r\n  //       message size can be reset for all data channels at a later stage.\r\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\r\n\r\n  function wrapDcSend(dc, pc) {\r\n    const origDataChannelSend = dc.send;\r\n    dc.send = function send() {\r\n      const data = arguments[0];\r\n      const length = data.length || data.size || data.byteLength;\r\n      if (dc.readyState === 'open' &&\r\n          pc.sctp && length > pc.sctp.maxMessageSize) {\r\n        throw new TypeError('Message too large (can send a maximum of ' +\r\n          pc.sctp.maxMessageSize + ' bytes)');\r\n      }\r\n      return origDataChannelSend.apply(dc, arguments);\r\n    };\r\n  }\r\n  const origCreateDataChannel =\r\n    window.RTCPeerConnection.prototype.createDataChannel;\r\n  window.RTCPeerConnection.prototype.createDataChannel =\r\n    function createDataChannel() {\r\n      const dataChannel = origCreateDataChannel.apply(this, arguments);\r\n      wrapDcSend(dataChannel, this);\r\n      return dataChannel;\r\n    };\r\n  utils.wrapPeerConnectionEvent(window, 'datachannel', e => {\r\n    wrapDcSend(e.channel, e.target);\r\n    return e;\r\n  });\r\n}\r\n\r\n\r\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\r\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\r\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\r\n * since DTLS failures would be hidden. See\r\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\r\n * for the Firefox tracking bug.\r\n */\r\nexport function shimConnectionState(window) {\r\n  if (!window.RTCPeerConnection ||\r\n      'connectionState' in window.RTCPeerConnection.prototype) {\r\n    return;\r\n  }\r\n  const proto = window.RTCPeerConnection.prototype;\r\n  Object.defineProperty(proto, 'connectionState', {\r\n    get() {\r\n      return {\r\n        completed: 'connected',\r\n        checking: 'connecting'\r\n      }[this.iceConnectionState] || this.iceConnectionState;\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n  Object.defineProperty(proto, 'onconnectionstatechange', {\r\n    get() {\r\n      return this._onconnectionstatechange || null;\r\n    },\r\n    set(cb) {\r\n      if (this._onconnectionstatechange) {\r\n        this.removeEventListener('connectionstatechange',\r\n            this._onconnectionstatechange);\r\n        delete this._onconnectionstatechange;\r\n      }\r\n      if (cb) {\r\n        this.addEventListener('connectionstatechange',\r\n            this._onconnectionstatechange = cb);\r\n      }\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n\r\n  ['setLocalDescription', 'setRemoteDescription'].forEach((method) => {\r\n    const origMethod = proto[method];\r\n    proto[method] = function() {\r\n      if (!this._connectionstatechangepoly) {\r\n        this._connectionstatechangepoly = e => {\r\n          const pc = e.target;\r\n          if (pc._lastConnectionState !== pc.connectionState) {\r\n            pc._lastConnectionState = pc.connectionState;\r\n            const newEvent = new Event('connectionstatechange', e);\r\n            pc.dispatchEvent(newEvent);\r\n          }\r\n          return e;\r\n        };\r\n        this.addEventListener('iceconnectionstatechange',\r\n          this._connectionstatechangepoly);\r\n      }\r\n      return origMethod.apply(this, arguments);\r\n    };\r\n  });\r\n}\r\n\r\nexport function removeExtmapAllowMixed(window, browserDetails) {\r\n  /* remove a=extmap-allow-mixed for webrtc.org < M71 */\r\n  if (!window.RTCPeerConnection) {\r\n    return;\r\n  }\r\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\r\n    return;\r\n  }\r\n  if (browserDetails.browser === 'safari' && browserDetails.version >= 605) {\r\n    return;\r\n  }\r\n  const nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\r\n  window.RTCPeerConnection.prototype.setRemoteDescription =\r\n  function setRemoteDescription(desc) {\r\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\r\n      const sdp = desc.sdp.split('\\n').filter((line) => {\r\n        return line.trim() !== 'a=extmap-allow-mixed';\r\n      }).join('\\n');\r\n      // Safari enforces read-only-ness of RTCSessionDescription fields.\r\n      if (window.RTCSessionDescription &&\r\n          desc instanceof window.RTCSessionDescription) {\r\n        arguments[0] = new window.RTCSessionDescription({\r\n          type: desc.type,\r\n          sdp,\r\n        });\r\n      } else {\r\n        desc.sdp = sdp;\r\n      }\r\n    }\r\n    return nativeSRD.apply(this, arguments);\r\n  };\r\n}\r\n\r\nexport function shimAddIceCandidateNullOrEmpty(window, browserDetails) {\r\n  // Support for addIceCandidate(null or undefined)\r\n  // as well as addIceCandidate({candidate: \"\", ...})\r\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=978582\r\n  // Note: must be called before other polyfills which change the signature.\r\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\r\n    return;\r\n  }\r\n  const nativeAddIceCandidate =\r\n      window.RTCPeerConnection.prototype.addIceCandidate;\r\n  if (!nativeAddIceCandidate || nativeAddIceCandidate.length === 0) {\r\n    return;\r\n  }\r\n  window.RTCPeerConnection.prototype.addIceCandidate =\r\n    function addIceCandidate() {\r\n      if (!arguments[0]) {\r\n        if (arguments[1]) {\r\n          arguments[1].apply(null);\r\n        }\r\n        return Promise.resolve();\r\n      }\r\n      // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\r\n      // in older versions.\r\n      // Native support for ignoring exists for Chrome M77+.\r\n      // Safari ignores as well, exact version unknown but works in the same\r\n      // version that also ignores addIceCandidate(null).\r\n      if (((browserDetails.browser === 'chrome' && browserDetails.version < 78)\r\n           || (browserDetails.browser === 'firefox'\r\n               && browserDetails.version < 68)\r\n           || (browserDetails.browser === 'safari'))\r\n          && arguments[0] && arguments[0].candidate === '') {\r\n        return Promise.resolve();\r\n      }\r\n      return nativeAddIceCandidate.apply(this, arguments);\r\n    };\r\n}\r\n\r\n// Note: Make sure to call this ahead of APIs that modify\r\n// setLocalDescription.length\r\nexport function shimParameterlessSetLocalDescription(window, browserDetails) {\r\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\r\n    return;\r\n  }\r\n  const nativeSetLocalDescription =\r\n      window.RTCPeerConnection.prototype.setLocalDescription;\r\n  if (!nativeSetLocalDescription || nativeSetLocalDescription.length === 0) {\r\n    return;\r\n  }\r\n  window.RTCPeerConnection.prototype.setLocalDescription =\r\n    function setLocalDescription() {\r\n      let desc = arguments[0] || {};\r\n      if (typeof desc !== 'object' || (desc.type && desc.sdp)) {\r\n        return nativeSetLocalDescription.apply(this, arguments);\r\n      }\r\n      // The remaining steps should technically happen when SLD comes off the\r\n      // RTCPeerConnection's operations chain (not ahead of going on it), but\r\n      // this is too difficult to shim. Instead, this shim only covers the\r\n      // common case where the operations chain is empty. This is imperfect, but\r\n      // should cover many cases. Rationale: Even if we can't reduce the glare\r\n      // window to zero on imperfect implementations, there's value in tapping\r\n      // into the perfect negotiation pattern that several browsers support.\r\n      desc = {type: desc.type, sdp: desc.sdp};\r\n      if (!desc.type) {\r\n        switch (this.signalingState) {\r\n          case 'stable':\r\n          case 'have-local-offer':\r\n          case 'have-remote-pranswer':\r\n            desc.type = 'offer';\r\n            break;\r\n          default:\r\n            desc.type = 'answer';\r\n            break;\r\n        }\r\n      }\r\n      if (desc.sdp || (desc.type !== 'offer' && desc.type !== 'answer')) {\r\n        return nativeSetLocalDescription.apply(this, [desc]);\r\n      }\r\n      const func = desc.type === 'offer' ? this.createOffer : this.createAnswer;\r\n      return func.apply(this)\r\n        .then(d => nativeSetLocalDescription.apply(this, [d]));\r\n    };\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,OAAOA,QAAQ,MAAM,KAAK;AAC1B,OAAO,KAAKC,KAAK,MAAM,SAAS;AAEhC,OAAO,SAASC,mBAAmB,CAACC,MAAM,EAAE;EAC1C;EACA;EACA,IAAI,CAACA,MAAM,CAACC,eAAe,IAAKD,MAAM,CAACC,eAAe,IAAI,YAAY,IAClED,MAAM,CAACC,eAAe,CAACC,SAAU,EAAE;IACrC;EACF;EAEA,IAAMC,qBAAqB,GAAGH,MAAM,CAACC,eAAe;EACpDD,MAAM,CAACC,eAAe,GAAG,SAASA,eAAe,CAACG,IAAI,EAAE;IACtD;IACA,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAIA,IAAI,CAACC,SAAS,IAC1CD,IAAI,CAACC,SAAS,CAACC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;MACtCF,IAAI,GAAGG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACL,IAAI,CAAC,CAAC;MACvCA,IAAI,CAACC,SAAS,GAAGD,IAAI,CAACC,SAAS,CAACK,MAAM,CAAC,CAAC,CAAC;IAC3C;IAEA,IAAIN,IAAI,CAACC,SAAS,IAAID,IAAI,CAACC,SAAS,CAACM,MAAM,EAAE;MAC3C;MACA,IAAMC,eAAe,GAAG,IAAIT,qBAAqB,CAACC,IAAI,CAAC;MACvD,IAAMS,eAAe,GAAGhB,QAAQ,CAACiB,cAAc,CAACV,IAAI,CAACC,SAAS,CAAC;MAC/D,IAAMU,kBAAkB,GAAGC,MAAM,CAACC,MAAM,CAACL,eAAe,EACpDC,eAAe,CAAC;;MAEpB;MACAE,kBAAkB,CAACG,MAAM,GAAG,SAASA,MAAM,GAAG;QAC5C,OAAO;UACLb,SAAS,EAAEU,kBAAkB,CAACV,SAAS;UACvCc,MAAM,EAAEJ,kBAAkB,CAACI,MAAM;UACjCC,aAAa,EAAEL,kBAAkB,CAACK,aAAa;UAC/CC,gBAAgB,EAAEN,kBAAkB,CAACM;QACvC,CAAC;MACH,CAAC;MACD,OAAON,kBAAkB;IAC3B;IACA,OAAO,IAAIZ,qBAAqB,CAACC,IAAI,CAAC;EACxC,CAAC;EACDJ,MAAM,CAACC,eAAe,CAACC,SAAS,GAAGC,qBAAqB,CAACD,SAAS;;EAElE;EACA;EACAJ,KAAK,CAACwB,uBAAuB,CAACtB,MAAM,EAAE,cAAc,EAAE,UAAAuB,CAAC,EAAI;IACzD,IAAIA,CAAC,CAAClB,SAAS,EAAE;MACfW,MAAM,CAACQ,cAAc,CAACD,CAAC,EAAE,WAAW,EAAE;QACpCE,KAAK,EAAE,IAAIzB,MAAM,CAACC,eAAe,CAACsB,CAAC,CAAClB,SAAS,CAAC;QAC9CqB,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ;IACA,OAAOH,CAAC;EACV,CAAC,CAAC;AACJ;AAEA,OAAO,SAASI,gCAAgC,CAAC3B,MAAM,EAAE;EACvD,IAAI,CAACA,MAAM,CAACC,eAAe,IAAKD,MAAM,CAACC,eAAe,IAAI,eAAe,IACrED,MAAM,CAACC,eAAe,CAACC,SAAU,EAAE;IACrC;EACF;;EAEA;EACA;EACAJ,KAAK,CAACwB,uBAAuB,CAACtB,MAAM,EAAE,cAAc,EAAE,UAAAuB,CAAC,EAAI;IACzD,IAAIA,CAAC,CAAClB,SAAS,EAAE;MACf,IAAMQ,eAAe,GAAGhB,QAAQ,CAACiB,cAAc,CAACS,CAAC,CAAClB,SAAS,CAACA,SAAS,CAAC;MACtE,IAAIQ,eAAe,CAACe,IAAI,KAAK,OAAO,EAAE;QACpC;QACA;QACAL,CAAC,CAAClB,SAAS,CAACwB,aAAa,GAAG;UAC1B,CAAC,EAAE,KAAK;UACR,CAAC,EAAE,KAAK;UACR,CAAC,EAAE;QACL,CAAC,CAAChB,eAAe,CAACiB,QAAQ,IAAI,EAAE,CAAC;MACnC;IACF;IACA,OAAOP,CAAC;EACV,CAAC,CAAC;AACJ;AAEA,OAAO,SAASQ,kBAAkB,CAAC/B,MAAM,EAAEgC,cAAc,EAAE;EACzD,IAAI,CAAChC,MAAM,CAACiC,iBAAiB,EAAE;IAC7B;EACF;EAEA,IAAI,EAAE,MAAM,IAAIjC,MAAM,CAACiC,iBAAiB,CAAC/B,SAAS,CAAC,EAAE;IACnDc,MAAM,CAACQ,cAAc,CAACxB,MAAM,CAACiC,iBAAiB,CAAC/B,SAAS,EAAE,MAAM,EAAE;MAChEgC,GAAG,iBAAG;QACJ,OAAO,OAAO,IAAI,CAACC,KAAK,KAAK,WAAW,GAAG,IAAI,GAAG,IAAI,CAACA,KAAK;MAC9D;IACF,CAAC,CAAC;EACJ;EAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB,CAAYC,WAAW,EAAE;IAC9C,IAAI,CAACA,WAAW,IAAI,CAACA,WAAW,CAACC,GAAG,EAAE;MACpC,OAAO,KAAK;IACd;IACA,IAAMC,QAAQ,GAAG1C,QAAQ,CAAC2C,aAAa,CAACH,WAAW,CAACC,GAAG,CAAC;IACxDC,QAAQ,CAACE,KAAK,EAAE;IAChB,OAAOF,QAAQ,CAACG,IAAI,CAAC,UAAAC,YAAY,EAAI;MACnC,IAAMC,KAAK,GAAG/C,QAAQ,CAACgD,UAAU,CAACF,YAAY,CAAC;MAC/C,OAAOC,KAAK,IAAIA,KAAK,CAACE,IAAI,KAAK,aAAa,IACrCF,KAAK,CAACG,QAAQ,CAACzC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC9C,CAAC,CAAC;EACJ,CAAC;EAED,IAAM0C,uBAAuB,GAAG,SAA1BA,uBAAuB,CAAYX,WAAW,EAAE;IACpD;IACA,IAAMY,KAAK,GAAGZ,WAAW,CAACC,GAAG,CAACW,KAAK,CAAC,iCAAiC,CAAC;IACtE,IAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,CAACtC,MAAM,GAAG,CAAC,EAAE;MACtC,OAAO,CAAC,CAAC;IACX;IACA,IAAMuC,OAAO,GAAGC,QAAQ,CAACF,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IACtC;IACA,OAAOC,OAAO,KAAKA,OAAO,GAAG,CAAC,CAAC,GAAGA,OAAO;EAC3C,CAAC;EAED,IAAME,wBAAwB,GAAG,SAA3BA,wBAAwB,CAAYC,eAAe,EAAE;IACzD;IACA;IACA;IACA;IACA,IAAIC,qBAAqB,GAAG,KAAK;IACjC,IAAItB,cAAc,CAACuB,OAAO,KAAK,SAAS,EAAE;MACxC,IAAIvB,cAAc,CAACkB,OAAO,GAAG,EAAE,EAAE;QAC/B,IAAIG,eAAe,KAAK,CAAC,CAAC,EAAE;UAC1B;UACA;UACAC,qBAAqB,GAAG,KAAK;QAC/B,CAAC,MAAM;UACL;UACA;UACAA,qBAAqB,GAAG,UAAU;QACpC;MACF,CAAC,MAAM,IAAItB,cAAc,CAACkB,OAAO,GAAG,EAAE,EAAE;QACtC;QACA;QACA;QACA;QACAI,qBAAqB,GACnBtB,cAAc,CAACkB,OAAO,KAAK,EAAE,GAAG,KAAK,GAAG,KAAK;MACjD,CAAC,MAAM;QACL;QACAI,qBAAqB,GAAG,UAAU;MACpC;IACF;IACA,OAAOA,qBAAqB;EAC9B,CAAC;EAED,IAAME,iBAAiB,GAAG,SAApBA,iBAAiB,CAAYnB,WAAW,EAAEgB,eAAe,EAAE;IAC/D;IACA;IACA,IAAII,cAAc,GAAG,KAAK;;IAE1B;IACA;IACA;IACA,IAAIzB,cAAc,CAACuB,OAAO,KAAK,SAAS,IAChCvB,cAAc,CAACkB,OAAO,KAAK,EAAE,EAAE;MACrCO,cAAc,GAAG,KAAK;IACxB;IAEA,IAAMR,KAAK,GAAGpD,QAAQ,CAAC6D,WAAW,CAACrB,WAAW,CAACC,GAAG,EAChD,qBAAqB,CAAC;IACxB,IAAIW,KAAK,CAACtC,MAAM,GAAG,CAAC,EAAE;MACpB8C,cAAc,GAAGN,QAAQ,CAACF,KAAK,CAAC,CAAC,CAAC,CAACvC,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;IACpD,CAAC,MAAM,IAAIsB,cAAc,CAACuB,OAAO,KAAK,SAAS,IACnCF,eAAe,KAAK,CAAC,CAAC,EAAE;MAClC;MACA;MACA;MACAI,cAAc,GAAG,UAAU;IAC7B;IACA,OAAOA,cAAc;EACvB,CAAC;EAED,IAAME,wBAAwB,GAC1B3D,MAAM,CAACiC,iBAAiB,CAAC/B,SAAS,CAAC0D,oBAAoB;EAC3D5D,MAAM,CAACiC,iBAAiB,CAAC/B,SAAS,CAAC0D,oBAAoB,GACrD,SAASA,oBAAoB,GAAG;IAC9B,IAAI,CAACzB,KAAK,GAAG,IAAI;IACjB;IACA;IACA;IACA,IAAIH,cAAc,CAACuB,OAAO,KAAK,QAAQ,IAAIvB,cAAc,CAACkB,OAAO,IAAI,EAAE,EAAE;MACvE,4BAAuB,IAAI,CAACW,gBAAgB,EAAE;QAAvCC,YAAY,yBAAZA,YAAY;MACnB,IAAIA,YAAY,KAAK,QAAQ,EAAE;QAC7B9C,MAAM,CAACQ,cAAc,CAAC,IAAI,EAAE,MAAM,EAAE;UAClCU,GAAG,iBAAG;YACJ,OAAO,OAAO,IAAI,CAACC,KAAK,KAAK,WAAW,GAAG,IAAI,GAAG,IAAI,CAACA,KAAK;UAC9D,CAAC;UACD4B,UAAU,EAAE,IAAI;UAChBC,YAAY,EAAE;QAChB,CAAC,CAAC;MACJ;IACF;IAEA,IAAI5B,iBAAiB,CAAC6B,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;MACnC;MACA,IAAMC,SAAS,GAAGlB,uBAAuB,CAACiB,SAAS,CAAC,CAAC,CAAC,CAAC;;MAEvD;MACA,IAAME,UAAU,GAAGf,wBAAwB,CAACc,SAAS,CAAC;;MAEtD;MACA,IAAME,SAAS,GAAGZ,iBAAiB,CAACS,SAAS,CAAC,CAAC,CAAC,EAAEC,SAAS,CAAC;;MAE5D;MACA,IAAIT,cAAc;MAClB,IAAIU,UAAU,KAAK,CAAC,IAAIC,SAAS,KAAK,CAAC,EAAE;QACvCX,cAAc,GAAGY,MAAM,CAACC,iBAAiB;MAC3C,CAAC,MAAM,IAAIH,UAAU,KAAK,CAAC,IAAIC,SAAS,KAAK,CAAC,EAAE;QAC9CX,cAAc,GAAGc,IAAI,CAACC,GAAG,CAACL,UAAU,EAAEC,SAAS,CAAC;MAClD,CAAC,MAAM;QACLX,cAAc,GAAGc,IAAI,CAACE,GAAG,CAACN,UAAU,EAAEC,SAAS,CAAC;MAClD;;MAEA;MACA;MACA,IAAMM,IAAI,GAAG,CAAC,CAAC;MACf1D,MAAM,CAACQ,cAAc,CAACkD,IAAI,EAAE,gBAAgB,EAAE;QAC5CxC,GAAG,iBAAG;UACJ,OAAOuB,cAAc;QACvB;MACF,CAAC,CAAC;MACF,IAAI,CAACtB,KAAK,GAAGuC,IAAI;IACnB;IAEA,OAAOf,wBAAwB,CAACgB,KAAK,CAAC,IAAI,EAAEV,SAAS,CAAC;EACxD,CAAC;AACL;AAEA,OAAO,SAASW,sBAAsB,CAAC5E,MAAM,EAAE;EAC7C,IAAI,EAAEA,MAAM,CAACiC,iBAAiB,IAC1B,mBAAmB,IAAIjC,MAAM,CAACiC,iBAAiB,CAAC/B,SAAS,CAAC,EAAE;IAC9D;EACF;;EAEA;EACA;EACA;;EAEA,SAAS2E,UAAU,CAACC,EAAE,EAAEC,EAAE,EAAE;IAC1B,IAAMC,mBAAmB,GAAGF,EAAE,CAACG,IAAI;IACnCH,EAAE,CAACG,IAAI,GAAG,SAASA,IAAI,GAAG;MACxB,IAAMC,IAAI,GAAGjB,SAAS,CAAC,CAAC,CAAC;MACzB,IAAMtD,MAAM,GAAGuE,IAAI,CAACvE,MAAM,IAAIuE,IAAI,CAACC,IAAI,IAAID,IAAI,CAACE,UAAU;MAC1D,IAAIN,EAAE,CAACO,UAAU,KAAK,MAAM,IACxBN,EAAE,CAACL,IAAI,IAAI/D,MAAM,GAAGoE,EAAE,CAACL,IAAI,CAACjB,cAAc,EAAE;QAC9C,MAAM,IAAI6B,SAAS,CAAC,2CAA2C,GAC7DP,EAAE,CAACL,IAAI,CAACjB,cAAc,GAAG,SAAS,CAAC;MACvC;MACA,OAAOuB,mBAAmB,CAACL,KAAK,CAACG,EAAE,EAAEb,SAAS,CAAC;IACjD,CAAC;EACH;EACA,IAAMsB,qBAAqB,GACzBvF,MAAM,CAACiC,iBAAiB,CAAC/B,SAAS,CAACsF,iBAAiB;EACtDxF,MAAM,CAACiC,iBAAiB,CAAC/B,SAAS,CAACsF,iBAAiB,GAClD,SAASA,iBAAiB,GAAG;IAC3B,IAAMC,WAAW,GAAGF,qBAAqB,CAACZ,KAAK,CAAC,IAAI,EAAEV,SAAS,CAAC;IAChEY,UAAU,CAACY,WAAW,EAAE,IAAI,CAAC;IAC7B,OAAOA,WAAW;EACpB,CAAC;EACH3F,KAAK,CAACwB,uBAAuB,CAACtB,MAAM,EAAE,aAAa,EAAE,UAAAuB,CAAC,EAAI;IACxDsD,UAAU,CAACtD,CAAC,CAACmE,OAAO,EAAEnE,CAAC,CAACoE,MAAM,CAAC;IAC/B,OAAOpE,CAAC;EACV,CAAC,CAAC;AACJ;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASqE,mBAAmB,CAAC5F,MAAM,EAAE;EAC1C,IAAI,CAACA,MAAM,CAACiC,iBAAiB,IACzB,iBAAiB,IAAIjC,MAAM,CAACiC,iBAAiB,CAAC/B,SAAS,EAAE;IAC3D;EACF;EACA,IAAM2F,KAAK,GAAG7F,MAAM,CAACiC,iBAAiB,CAAC/B,SAAS;EAChDc,MAAM,CAACQ,cAAc,CAACqE,KAAK,EAAE,iBAAiB,EAAE;IAC9C3D,GAAG,iBAAG;MACJ,OAAO;QACL4D,SAAS,EAAE,WAAW;QACtBC,QAAQ,EAAE;MACZ,CAAC,CAAC,IAAI,CAACC,kBAAkB,CAAC,IAAI,IAAI,CAACA,kBAAkB;IACvD,CAAC;IACDjC,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAChB,CAAC,CAAC;EACFhD,MAAM,CAACQ,cAAc,CAACqE,KAAK,EAAE,yBAAyB,EAAE;IACtD3D,GAAG,iBAAG;MACJ,OAAO,IAAI,CAAC+D,wBAAwB,IAAI,IAAI;IAC9C,CAAC;IACDC,GAAG,eAACC,EAAE,EAAE;MACN,IAAI,IAAI,CAACF,wBAAwB,EAAE;QACjC,IAAI,CAACG,mBAAmB,CAAC,uBAAuB,EAC5C,IAAI,CAACH,wBAAwB,CAAC;QAClC,OAAO,IAAI,CAACA,wBAAwB;MACtC;MACA,IAAIE,EAAE,EAAE;QACN,IAAI,CAACE,gBAAgB,CAAC,uBAAuB,EACzC,IAAI,CAACJ,wBAAwB,GAAGE,EAAE,CAAC;MACzC;IACF,CAAC;IACDpC,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAChB,CAAC,CAAC;EAEF,CAAC,qBAAqB,EAAE,sBAAsB,CAAC,CAACsC,OAAO,CAAC,UAACC,MAAM,EAAK;IAClE,IAAMC,UAAU,GAAGX,KAAK,CAACU,MAAM,CAAC;IAChCV,KAAK,CAACU,MAAM,CAAC,GAAG,YAAW;MACzB,IAAI,CAAC,IAAI,CAACE,0BAA0B,EAAE;QACpC,IAAI,CAACA,0BAA0B,GAAG,UAAAlF,CAAC,EAAI;UACrC,IAAMwD,EAAE,GAAGxD,CAAC,CAACoE,MAAM;UACnB,IAAIZ,EAAE,CAAC2B,oBAAoB,KAAK3B,EAAE,CAAC4B,eAAe,EAAE;YAClD5B,EAAE,CAAC2B,oBAAoB,GAAG3B,EAAE,CAAC4B,eAAe;YAC5C,IAAMC,QAAQ,GAAG,IAAIC,KAAK,CAAC,uBAAuB,EAAEtF,CAAC,CAAC;YACtDwD,EAAE,CAAC+B,aAAa,CAACF,QAAQ,CAAC;UAC5B;UACA,OAAOrF,CAAC;QACV,CAAC;QACD,IAAI,CAAC8E,gBAAgB,CAAC,0BAA0B,EAC9C,IAAI,CAACI,0BAA0B,CAAC;MACpC;MACA,OAAOD,UAAU,CAAC7B,KAAK,CAAC,IAAI,EAAEV,SAAS,CAAC;IAC1C,CAAC;EACH,CAAC,CAAC;AACJ;AAEA,OAAO,SAAS8C,sBAAsB,CAAC/G,MAAM,EAAEgC,cAAc,EAAE;EAC7D;EACA,IAAI,CAAChC,MAAM,CAACiC,iBAAiB,EAAE;IAC7B;EACF;EACA,IAAID,cAAc,CAACuB,OAAO,KAAK,QAAQ,IAAIvB,cAAc,CAACkB,OAAO,IAAI,EAAE,EAAE;IACvE;EACF;EACA,IAAIlB,cAAc,CAACuB,OAAO,KAAK,QAAQ,IAAIvB,cAAc,CAACkB,OAAO,IAAI,GAAG,EAAE;IACxE;EACF;EACA,IAAM8D,SAAS,GAAGhH,MAAM,CAACiC,iBAAiB,CAAC/B,SAAS,CAAC0D,oBAAoB;EACzE5D,MAAM,CAACiC,iBAAiB,CAAC/B,SAAS,CAAC0D,oBAAoB,GACvD,SAASA,oBAAoB,CAACqD,IAAI,EAAE;IAClC,IAAIA,IAAI,IAAIA,IAAI,CAAC3E,GAAG,IAAI2E,IAAI,CAAC3E,GAAG,CAAChC,OAAO,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC,EAAE;MACzE,IAAMgC,GAAG,GAAG2E,IAAI,CAAC3E,GAAG,CAAC4E,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM,CAAC,UAACC,IAAI,EAAK;QAChD,OAAOA,IAAI,CAACC,IAAI,EAAE,KAAK,sBAAsB;MAC/C,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;MACb;MACA,IAAItH,MAAM,CAACuH,qBAAqB,IAC5BN,IAAI,YAAYjH,MAAM,CAACuH,qBAAqB,EAAE;QAChDtD,SAAS,CAAC,CAAC,CAAC,GAAG,IAAIjE,MAAM,CAACuH,qBAAqB,CAAC;UAC9C3F,IAAI,EAAEqF,IAAI,CAACrF,IAAI;UACfU,GAAG,EAAHA;QACF,CAAC,CAAC;MACJ,CAAC,MAAM;QACL2E,IAAI,CAAC3E,GAAG,GAAGA,GAAG;MAChB;IACF;IACA,OAAO0E,SAAS,CAACrC,KAAK,CAAC,IAAI,EAAEV,SAAS,CAAC;EACzC,CAAC;AACH;AAEA,OAAO,SAASuD,8BAA8B,CAACxH,MAAM,EAAEgC,cAAc,EAAE;EACrE;EACA;EACA;EACA;EACA,IAAI,EAAEhC,MAAM,CAACiC,iBAAiB,IAAIjC,MAAM,CAACiC,iBAAiB,CAAC/B,SAAS,CAAC,EAAE;IACrE;EACF;EACA,IAAMuH,qBAAqB,GACvBzH,MAAM,CAACiC,iBAAiB,CAAC/B,SAAS,CAACwH,eAAe;EACtD,IAAI,CAACD,qBAAqB,IAAIA,qBAAqB,CAAC9G,MAAM,KAAK,CAAC,EAAE;IAChE;EACF;EACAX,MAAM,CAACiC,iBAAiB,CAAC/B,SAAS,CAACwH,eAAe,GAChD,SAASA,eAAe,GAAG;IACzB,IAAI,CAACzD,SAAS,CAAC,CAAC,CAAC,EAAE;MACjB,IAAIA,SAAS,CAAC,CAAC,CAAC,EAAE;QAChBA,SAAS,CAAC,CAAC,CAAC,CAACU,KAAK,CAAC,IAAI,CAAC;MAC1B;MACA,OAAOgD,OAAO,CAACC,OAAO,EAAE;IAC1B;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAAE5F,cAAc,CAACuB,OAAO,KAAK,QAAQ,IAAIvB,cAAc,CAACkB,OAAO,GAAG,EAAE,IAC/DlB,cAAc,CAACuB,OAAO,KAAK,SAAS,IACjCvB,cAAc,CAACkB,OAAO,GAAG,EAAG,IAC/BlB,cAAc,CAACuB,OAAO,KAAK,QAAS,KACtCU,SAAS,CAAC,CAAC,CAAC,IAAIA,SAAS,CAAC,CAAC,CAAC,CAAC5D,SAAS,KAAK,EAAE,EAAE;MACpD,OAAOsH,OAAO,CAACC,OAAO,EAAE;IAC1B;IACA,OAAOH,qBAAqB,CAAC9C,KAAK,CAAC,IAAI,EAAEV,SAAS,CAAC;EACrD,CAAC;AACL;;AAEA;AACA;AACA,OAAO,SAAS4D,oCAAoC,CAAC7H,MAAM,EAAEgC,cAAc,EAAE;EAC3E,IAAI,EAAEhC,MAAM,CAACiC,iBAAiB,IAAIjC,MAAM,CAACiC,iBAAiB,CAAC/B,SAAS,CAAC,EAAE;IACrE;EACF;EACA,IAAM4H,yBAAyB,GAC3B9H,MAAM,CAACiC,iBAAiB,CAAC/B,SAAS,CAAC6H,mBAAmB;EAC1D,IAAI,CAACD,yBAAyB,IAAIA,yBAAyB,CAACnH,MAAM,KAAK,CAAC,EAAE;IACxE;EACF;EACAX,MAAM,CAACiC,iBAAiB,CAAC/B,SAAS,CAAC6H,mBAAmB,GACpD,SAASA,mBAAmB,GAAG;IAAA;IAC7B,IAAId,IAAI,GAAGhD,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAC7B,IAAI,OAAOgD,IAAI,KAAK,QAAQ,IAAKA,IAAI,CAACrF,IAAI,IAAIqF,IAAI,CAAC3E,GAAI,EAAE;MACvD,OAAOwF,yBAAyB,CAACnD,KAAK,CAAC,IAAI,EAAEV,SAAS,CAAC;IACzD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAgD,IAAI,GAAG;MAACrF,IAAI,EAAEqF,IAAI,CAACrF,IAAI;MAAEU,GAAG,EAAE2E,IAAI,CAAC3E;IAAG,CAAC;IACvC,IAAI,CAAC2E,IAAI,CAACrF,IAAI,EAAE;MACd,QAAQ,IAAI,CAACoG,cAAc;QACzB,KAAK,QAAQ;QACb,KAAK,kBAAkB;QACvB,KAAK,sBAAsB;UACzBf,IAAI,CAACrF,IAAI,GAAG,OAAO;UACnB;QACF;UACEqF,IAAI,CAACrF,IAAI,GAAG,QAAQ;UACpB;MAAM;IAEZ;IACA,IAAIqF,IAAI,CAAC3E,GAAG,IAAK2E,IAAI,CAACrF,IAAI,KAAK,OAAO,IAAIqF,IAAI,CAACrF,IAAI,KAAK,QAAS,EAAE;MACjE,OAAOkG,yBAAyB,CAACnD,KAAK,CAAC,IAAI,EAAE,CAACsC,IAAI,CAAC,CAAC;IACtD;IACA,IAAMgB,IAAI,GAAGhB,IAAI,CAACrF,IAAI,KAAK,OAAO,GAAG,IAAI,CAACsG,WAAW,GAAG,IAAI,CAACC,YAAY;IACzE,OAAOF,IAAI,CAACtD,KAAK,CAAC,IAAI,CAAC,CACpByD,IAAI,CAAC,UAAAC,CAAC;MAAA,OAAIP,yBAAyB,CAACnD,KAAK,CAAC,KAAI,EAAE,CAAC0D,CAAC,CAAC,CAAC;IAAA,EAAC;EAC1D,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}