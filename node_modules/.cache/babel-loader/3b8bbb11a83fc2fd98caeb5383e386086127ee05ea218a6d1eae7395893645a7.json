{"ast":null,"code":"/*\r\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\r\n *\r\n *  Use of this source code is governed by a BSD-style license\r\n *  that can be found in the LICENSE file in the root of the source\r\n *  tree.\r\n */\n/* eslint-env node */\n'use strict';\n\nimport _defineProperty from \"C:/Users/cnsi-3f-1/Desktop/React/rtsp_to_web/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport * as utils from '../utils.js';\nexport { shimGetUserMedia } from './getusermedia';\nexport { shimGetDisplayMedia } from './getdisplaymedia';\nexport function shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get: function get() {\n        return this._ontrack;\n      },\n      set: function set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n        this.addEventListener('track', this._ontrack = f);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    var origSetRemoteDescription = window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription() {\n      var _this = this;\n      if (!this._ontrackpoly) {\n        this._ontrackpoly = function (e) {\n          // onaddstream does not fire when a track is added to an existing\n          // stream. But stream.onaddtrack is implemented so we use that.\n          e.stream.addEventListener('addtrack', function (te) {\n            var receiver;\n            if (window.RTCPeerConnection.prototype.getReceivers) {\n              receiver = _this.getReceivers().find(function (r) {\n                return r.track && r.track.id === te.track.id;\n              });\n            } else {\n              receiver = {\n                track: te.track\n              };\n            }\n            var event = new Event('track');\n            event.track = te.track;\n            event.receiver = receiver;\n            event.transceiver = {\n              receiver: receiver\n            };\n            event.streams = [e.stream];\n            _this.dispatchEvent(event);\n          });\n          e.stream.getTracks().forEach(function (track) {\n            var receiver;\n            if (window.RTCPeerConnection.prototype.getReceivers) {\n              receiver = _this.getReceivers().find(function (r) {\n                return r.track && r.track.id === track.id;\n              });\n            } else {\n              receiver = {\n                track: track\n              };\n            }\n            var event = new Event('track');\n            event.track = track;\n            event.receiver = receiver;\n            event.transceiver = {\n              receiver: receiver\n            };\n            event.streams = [e.stream];\n            _this.dispatchEvent(event);\n          });\n        };\n        this.addEventListener('addstream', this._ontrackpoly);\n      }\n      return origSetRemoteDescription.apply(this, arguments);\n    };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    utils.wrapPeerConnectionEvent(window, 'track', function (e) {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver', {\n          value: {\n            receiver: e.receiver\n          }\n        });\n      }\n      return e;\n    });\n  }\n}\nexport function shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if (typeof window === 'object' && window.RTCPeerConnection && !('getSenders' in window.RTCPeerConnection.prototype) && 'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    var shimSenderWithDtmf = function shimSenderWithDtmf(pc, track) {\n      return {\n        track: track,\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        },\n        _pc: pc\n      };\n    };\n\n    // augment addTrack when getSenders is not available.\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n\n      var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addTrack = function addTrack(track, stream) {\n        var sender = origAddTrack.apply(this, arguments);\n        if (!sender) {\n          sender = shimSenderWithDtmf(this, track);\n          this._senders.push(sender);\n        }\n        return sender;\n      };\n      var origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n      window.RTCPeerConnection.prototype.removeTrack = function removeTrack(sender) {\n        origRemoveTrack.apply(this, arguments);\n        var idx = this._senders.indexOf(sender);\n        if (idx !== -1) {\n          this._senders.splice(idx, 1);\n        }\n      };\n    }\n    var origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      var _this2 = this;\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(function (track) {\n        _this2._senders.push(shimSenderWithDtmf(_this2, track));\n      });\n    };\n    var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n      var _this3 = this;\n      this._senders = this._senders || [];\n      origRemoveStream.apply(this, [stream]);\n      stream.getTracks().forEach(function (track) {\n        var sender = _this3._senders.find(function (s) {\n          return s.track === track;\n        });\n        if (sender) {\n          // remove sender\n          _this3._senders.splice(_this3._senders.indexOf(sender), 1);\n        }\n      });\n    };\n  } else if (typeof window === 'object' && window.RTCPeerConnection && 'getSenders' in window.RTCPeerConnection.prototype && 'createDTMFSender' in window.RTCPeerConnection.prototype && window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n    var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      var _this4 = this;\n      var senders = origGetSenders.apply(this, []);\n      senders.forEach(function (sender) {\n        return sender._pc = _this4;\n      });\n      return senders;\n    };\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get: function get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n}\nexport function shimGetStats(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  var origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    var _this5 = this;\n    var _arguments = Array.prototype.slice.call(arguments),\n      selector = _arguments[0],\n      onSucc = _arguments[1],\n      onErr = _arguments[2];\n\n    // If selector is a function then we are in the old style stats so just\n    // pass back the original getStats format to avoid breaking old users.\n    if (arguments.length > 0 && typeof selector === 'function') {\n      return origGetStats.apply(this, arguments);\n    }\n\n    // When spec-style getStats is supported, return those when called with\n    // either no arguments or the selector argument is null.\n    if (origGetStats.length === 0 && (arguments.length === 0 || typeof selector !== 'function')) {\n      return origGetStats.apply(this, []);\n    }\n    var fixChromeStats_ = function fixChromeStats_(response) {\n      var standardReport = {};\n      var reports = response.result();\n      reports.forEach(function (report) {\n        var standardStats = {\n          id: report.id,\n          timestamp: report.timestamp,\n          type: {\n            localcandidate: 'local-candidate',\n            remotecandidate: 'remote-candidate'\n          }[report.type] || report.type\n        };\n        report.names().forEach(function (name) {\n          standardStats[name] = report.stat(name);\n        });\n        standardReport[standardStats.id] = standardStats;\n      });\n      return standardReport;\n    };\n\n    // shim getStats with maplike support\n    var makeMapStats = function makeMapStats(stats) {\n      return new Map(Object.keys(stats).map(function (key) {\n        return [key, stats[key]];\n      }));\n    };\n    if (arguments.length >= 2) {\n      var successCallbackWrapper_ = function successCallbackWrapper_(response) {\n        onSucc(makeMapStats(fixChromeStats_(response)));\n      };\n      return origGetStats.apply(this, [successCallbackWrapper_, selector]);\n    }\n\n    // promise-support\n    return new Promise(function (resolve, reject) {\n      origGetStats.apply(_this5, [function (response) {\n        resolve(makeMapStats(fixChromeStats_(response)));\n      }, reject]);\n    }).then(onSucc, onErr);\n  };\n}\nexport function shimSenderReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection && window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  }\n\n  // shim sender stats.\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        var _this6 = this;\n        var senders = origGetSenders.apply(this, []);\n        senders.forEach(function (sender) {\n          return sender._pc = _this6;\n        });\n        return senders;\n      };\n    }\n    var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n        var sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function getStats() {\n      var sender = this;\n      return this._pc.getStats().then(function (result) {\n        return (\n          /* Note: this will include stats of all senders that\r\n           *   send a track with the same id as sender.track as\r\n           *   it is not possible to identify the RTCRtpSender.\r\n           */\n          utils.filterStats(result, sender.track, true)\n        );\n      });\n    };\n  }\n\n  // shim receiver stats.\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    var origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n        var _this7 = this;\n        var receivers = origGetReceivers.apply(this, []);\n        receivers.forEach(function (receiver) {\n          return receiver._pc = _this7;\n        });\n        return receivers;\n      };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', function (e) {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function getStats() {\n      var receiver = this;\n      return this._pc.getStats().then(function (result) {\n        return utils.filterStats(result, receiver.track, false);\n      });\n    };\n  }\n  if (!('getStats' in window.RTCRtpSender.prototype && 'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  }\n\n  // shim RTCPeerConnection.getStats(track).\n  var origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    if (arguments.length > 0 && arguments[0] instanceof window.MediaStreamTrack) {\n      var track = arguments[0];\n      var sender;\n      var receiver;\n      var err;\n      this.getSenders().forEach(function (s) {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(function (r) {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n        return r.track === track;\n      });\n      if (err || sender && receiver) {\n        return Promise.reject(new DOMException('There are more than one sender or receiver for the track.', 'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n      return Promise.reject(new DOMException('There is no sender or receiver for the track.', 'InvalidAccessError'));\n    }\n    return origGetStats.apply(this, arguments);\n  };\n}\nexport function shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams = function getLocalStreams() {\n    var _this8 = this;\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    return Object.keys(this._shimmedLocalStreams).map(function (streamId) {\n      return _this8._shimmedLocalStreams[streamId][0];\n    });\n  };\n  var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  window.RTCPeerConnection.prototype.addTrack = function addTrack(track, stream) {\n    if (!stream) {\n      return origAddTrack.apply(this, arguments);\n    }\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    var sender = origAddTrack.apply(this, arguments);\n    if (!this._shimmedLocalStreams[stream.id]) {\n      this._shimmedLocalStreams[stream.id] = [stream, sender];\n    } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n      this._shimmedLocalStreams[stream.id].push(sender);\n    }\n    return sender;\n  };\n  var origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    var _this9 = this;\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    stream.getTracks().forEach(function (track) {\n      var alreadyExists = _this9.getSenders().find(function (s) {\n        return s.track === track;\n      });\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.', 'InvalidAccessError');\n      }\n    });\n    var existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    var newSenders = this.getSenders().filter(function (newSender) {\n      return existingSenders.indexOf(newSender) === -1;\n    });\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n  var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    delete this._shimmedLocalStreams[stream.id];\n    return origRemoveStream.apply(this, arguments);\n  };\n  var origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n  window.RTCPeerConnection.prototype.removeTrack = function removeTrack(sender) {\n    var _this10 = this;\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    if (sender) {\n      Object.keys(this._shimmedLocalStreams).forEach(function (streamId) {\n        var idx = _this10._shimmedLocalStreams[streamId].indexOf(sender);\n        if (idx !== -1) {\n          _this10._shimmedLocalStreams[streamId].splice(idx, 1);\n        }\n        if (_this10._shimmedLocalStreams[streamId].length === 1) {\n          delete _this10._shimmedLocalStreams[streamId];\n        }\n      });\n    }\n    return origRemoveTrack.apply(this, arguments);\n  };\n}\nexport function shimAddTrackRemoveTrack(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // shim addTrack and removeTrack.\n  if (window.RTCPeerConnection.prototype.addTrack && browserDetails.version >= 65) {\n    return shimAddTrackRemoveTrackWithNative(window);\n  }\n\n  // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n  var origGetLocalStreams = window.RTCPeerConnection.prototype.getLocalStreams;\n  window.RTCPeerConnection.prototype.getLocalStreams = function getLocalStreams() {\n    var _this11 = this;\n    var nativeStreams = origGetLocalStreams.apply(this);\n    this._reverseStreams = this._reverseStreams || {};\n    return nativeStreams.map(function (stream) {\n      return _this11._reverseStreams[stream.id];\n    });\n  };\n  var origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    var _this12 = this;\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n    stream.getTracks().forEach(function (track) {\n      var alreadyExists = _this12.getSenders().find(function (s) {\n        return s.track === track;\n      });\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.', 'InvalidAccessError');\n      }\n    });\n    // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n    if (!this._reverseStreams[stream.id]) {\n      var newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n    origAddStream.apply(this, [stream]);\n  };\n  var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n    origRemoveStream.apply(this, [this._streams[stream.id] || stream]);\n    delete this._reverseStreams[this._streams[stream.id] ? this._streams[stream.id].id : stream.id];\n    delete this._streams[stream.id];\n  };\n  window.RTCPeerConnection.prototype.addTrack = function addTrack(track, stream) {\n    var _this13 = this;\n    if (this.signalingState === 'closed') {\n      throw new DOMException('The RTCPeerConnection\\'s signalingState is \\'closed\\'.', 'InvalidStateError');\n    }\n    var streams = [].slice.call(arguments, 1);\n    if (streams.length !== 1 || !streams[0].getTracks().find(function (t) {\n      return t === track;\n    })) {\n      // this is not fully correct but all we can manage without\n      // [[associated MediaStreams]] internal slot.\n      throw new DOMException('The adapter.js addTrack polyfill only supports a single ' + ' stream which is associated with the specified track.', 'NotSupportedError');\n    }\n    var alreadyExists = this.getSenders().find(function (s) {\n      return s.track === track;\n    });\n    if (alreadyExists) {\n      throw new DOMException('Track already exists.', 'InvalidAccessError');\n    }\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n    var oldStream = this._streams[stream.id];\n    if (oldStream) {\n      // this is using odd Chrome behaviour, use with caution:\n      // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n      // Note: we rely on the high-level addTrack/dtmf shim to\n      // create the sender with a dtmf sender.\n      oldStream.addTrack(track);\n\n      // Trigger ONN async.\n      Promise.resolve().then(function () {\n        _this13.dispatchEvent(new Event('negotiationneeded'));\n      });\n    } else {\n      var newStream = new window.MediaStream([track]);\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      this.addStream(newStream);\n    }\n    return this.getSenders().find(function (s) {\n      return s.track === track;\n    });\n  };\n\n  // replace the internal stream id with the external one and\n  // vice versa.\n  function replaceInternalStreamId(pc, description) {\n    var sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(function (internalId) {\n      var externalStream = pc._reverseStreams[internalId];\n      var internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'), externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp: sdp\n    });\n  }\n  function replaceExternalStreamId(pc, description) {\n    var sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(function (internalId) {\n      var externalStream = pc._reverseStreams[internalId];\n      var internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'), internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp: sdp\n    });\n  }\n  ['createOffer', 'createAnswer'].forEach(function (method) {\n    var nativeMethod = window.RTCPeerConnection.prototype[method];\n    var methodObj = _defineProperty({}, method, function () {\n      var _this14 = this;\n      var args = arguments;\n      var isLegacyCall = arguments.length && typeof arguments[0] === 'function';\n      if (isLegacyCall) {\n        return nativeMethod.apply(this, [function (description) {\n          var desc = replaceInternalStreamId(_this14, description);\n          args[0].apply(null, [desc]);\n        }, function (err) {\n          if (args[1]) {\n            args[1].apply(null, err);\n          }\n        }, arguments[2]]);\n      }\n      return nativeMethod.apply(this, arguments).then(function (description) {\n        return replaceInternalStreamId(_this14, description);\n      });\n    });\n    window.RTCPeerConnection.prototype[method] = methodObj[method];\n  });\n  var origSetLocalDescription = window.RTCPeerConnection.prototype.setLocalDescription;\n  window.RTCPeerConnection.prototype.setLocalDescription = function setLocalDescription() {\n    if (!arguments.length || !arguments[0].type) {\n      return origSetLocalDescription.apply(this, arguments);\n    }\n    arguments[0] = replaceExternalStreamId(this, arguments[0]);\n    return origSetLocalDescription.apply(this, arguments);\n  };\n\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n  var origLocalDescription = Object.getOwnPropertyDescriptor(window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype, 'localDescription', {\n    get: function get() {\n      var description = origLocalDescription.get.apply(this);\n      if (description.type === '') {\n        return description;\n      }\n      return replaceInternalStreamId(this, description);\n    }\n  });\n  window.RTCPeerConnection.prototype.removeTrack = function removeTrack(sender) {\n    var _this15 = this;\n    if (this.signalingState === 'closed') {\n      throw new DOMException('The RTCPeerConnection\\'s signalingState is \\'closed\\'.', 'InvalidStateError');\n    }\n    // We can not yet check for sender instanceof RTCRtpSender\n    // since we shim RTPSender. So we check if sender._pc is set.\n    if (!sender._pc) {\n      throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' + 'does not implement interface RTCRtpSender.', 'TypeError');\n    }\n    var isLocal = sender._pc === this;\n    if (!isLocal) {\n      throw new DOMException('Sender was not created by this connection.', 'InvalidAccessError');\n    }\n\n    // Search for the native stream the senders track belongs to.\n    this._streams = this._streams || {};\n    var stream;\n    Object.keys(this._streams).forEach(function (streamid) {\n      var hasTrack = _this15._streams[streamid].getTracks().find(function (track) {\n        return sender.track === track;\n      });\n      if (hasTrack) {\n        stream = _this15._streams[streamid];\n      }\n    });\n    if (stream) {\n      if (stream.getTracks().length === 1) {\n        // if this is the last track of the stream, remove the stream. This\n        // takes care of any shimmed _senders.\n        this.removeStream(this._reverseStreams[stream.id]);\n      } else {\n        // relying on the same odd chrome behaviour as above.\n        stream.removeTrack(sender.track);\n      }\n      this.dispatchEvent(new Event('negotiationneeded'));\n    }\n  };\n}\nexport function shimPeerConnection(window, browserDetails) {\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n  if (browserDetails.version < 53) {\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'].forEach(function (method) {\n      var nativeMethod = window.RTCPeerConnection.prototype[method];\n      var methodObj = _defineProperty({}, method, function () {\n        arguments[0] = new (method === 'addIceCandidate' ? window.RTCIceCandidate : window.RTCSessionDescription)(arguments[0]);\n        return nativeMethod.apply(this, arguments);\n      });\n      window.RTCPeerConnection.prototype[method] = methodObj[method];\n    });\n  }\n}\n\n// Attempt to fix ONN in plan-b mode.\nexport function fixNegotiationNeeded(window, browserDetails) {\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', function (e) {\n    var pc = e.target;\n    if (browserDetails.version < 72 || pc.getConfiguration && pc.getConfiguration().sdpSemantics === 'plan-b') {\n      if (pc.signalingState !== 'stable') {\n        return;\n      }\n    }\n    return e;\n  });\n}","map":{"version":3,"names":["utils","shimGetUserMedia","shimGetDisplayMedia","shimMediaStream","window","MediaStream","webkitMediaStream","shimOnTrack","RTCPeerConnection","prototype","Object","defineProperty","get","_ontrack","set","f","removeEventListener","addEventListener","enumerable","configurable","origSetRemoteDescription","setRemoteDescription","_ontrackpoly","e","stream","te","receiver","getReceivers","find","r","track","id","event","Event","transceiver","streams","dispatchEvent","getTracks","forEach","apply","arguments","wrapPeerConnectionEvent","value","shimGetSendersWithDtmf","shimSenderWithDtmf","pc","dtmf","_dtmf","undefined","kind","createDTMFSender","_pc","getSenders","_senders","slice","origAddTrack","addTrack","sender","push","origRemoveTrack","removeTrack","idx","indexOf","splice","origAddStream","addStream","origRemoveStream","removeStream","s","RTCRtpSender","origGetSenders","senders","shimGetStats","origGetStats","getStats","selector","onSucc","onErr","length","fixChromeStats_","response","standardReport","reports","result","report","standardStats","timestamp","type","localcandidate","remotecandidate","names","name","stat","makeMapStats","stats","Map","keys","map","key","successCallbackWrapper_","Promise","resolve","reject","then","shimSenderReceiverGetStats","RTCRtpReceiver","filterStats","origGetReceivers","receivers","srcElement","MediaStreamTrack","err","DOMException","shimAddTrackRemoveTrackWithNative","getLocalStreams","_shimmedLocalStreams","streamId","alreadyExists","existingSenders","newSenders","filter","newSender","concat","shimAddTrackRemoveTrack","browserDetails","version","origGetLocalStreams","nativeStreams","_reverseStreams","_streams","newStream","signalingState","call","t","oldStream","replaceInternalStreamId","description","sdp","internalId","externalStream","internalStream","replace","RegExp","RTCSessionDescription","replaceExternalStreamId","method","nativeMethod","methodObj","args","isLegacyCall","desc","origSetLocalDescription","setLocalDescription","origLocalDescription","getOwnPropertyDescriptor","isLocal","streamid","hasTrack","shimPeerConnection","webkitRTCPeerConnection","RTCIceCandidate","fixNegotiationNeeded","target","getConfiguration","sdpSemantics"],"sources":["C:/Users/cnsi-3f-1/Desktop/React/rtsp_to_web/node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js"],"sourcesContent":["/*\r\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\r\n *\r\n *  Use of this source code is governed by a BSD-style license\r\n *  that can be found in the LICENSE file in the root of the source\r\n *  tree.\r\n */\r\n /* eslint-env node */\r\n'use strict';\r\nimport * as utils from '../utils.js';\r\n\r\nexport {shimGetUserMedia} from './getusermedia';\r\nexport {shimGetDisplayMedia} from './getdisplaymedia';\r\n\r\nexport function shimMediaStream(window) {\r\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\r\n}\r\n\r\nexport function shimOnTrack(window) {\r\n  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\r\n      window.RTCPeerConnection.prototype)) {\r\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\r\n      get() {\r\n        return this._ontrack;\r\n      },\r\n      set(f) {\r\n        if (this._ontrack) {\r\n          this.removeEventListener('track', this._ontrack);\r\n        }\r\n        this.addEventListener('track', this._ontrack = f);\r\n      },\r\n      enumerable: true,\r\n      configurable: true\r\n    });\r\n    const origSetRemoteDescription =\r\n        window.RTCPeerConnection.prototype.setRemoteDescription;\r\n    window.RTCPeerConnection.prototype.setRemoteDescription =\r\n      function setRemoteDescription() {\r\n        if (!this._ontrackpoly) {\r\n          this._ontrackpoly = (e) => {\r\n            // onaddstream does not fire when a track is added to an existing\r\n            // stream. But stream.onaddtrack is implemented so we use that.\r\n            e.stream.addEventListener('addtrack', te => {\r\n              let receiver;\r\n              if (window.RTCPeerConnection.prototype.getReceivers) {\r\n                receiver = this.getReceivers()\r\n                  .find(r => r.track && r.track.id === te.track.id);\r\n              } else {\r\n                receiver = {track: te.track};\r\n              }\r\n\r\n              const event = new Event('track');\r\n              event.track = te.track;\r\n              event.receiver = receiver;\r\n              event.transceiver = {receiver};\r\n              event.streams = [e.stream];\r\n              this.dispatchEvent(event);\r\n            });\r\n            e.stream.getTracks().forEach(track => {\r\n              let receiver;\r\n              if (window.RTCPeerConnection.prototype.getReceivers) {\r\n                receiver = this.getReceivers()\r\n                  .find(r => r.track && r.track.id === track.id);\r\n              } else {\r\n                receiver = {track};\r\n              }\r\n              const event = new Event('track');\r\n              event.track = track;\r\n              event.receiver = receiver;\r\n              event.transceiver = {receiver};\r\n              event.streams = [e.stream];\r\n              this.dispatchEvent(event);\r\n            });\r\n          };\r\n          this.addEventListener('addstream', this._ontrackpoly);\r\n        }\r\n        return origSetRemoteDescription.apply(this, arguments);\r\n      };\r\n  } else {\r\n    // even if RTCRtpTransceiver is in window, it is only used and\r\n    // emitted in unified-plan. Unfortunately this means we need\r\n    // to unconditionally wrap the event.\r\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\r\n      if (!e.transceiver) {\r\n        Object.defineProperty(e, 'transceiver',\r\n          {value: {receiver: e.receiver}});\r\n      }\r\n      return e;\r\n    });\r\n  }\r\n}\r\n\r\nexport function shimGetSendersWithDtmf(window) {\r\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\r\n  if (typeof window === 'object' && window.RTCPeerConnection &&\r\n      !('getSenders' in window.RTCPeerConnection.prototype) &&\r\n      'createDTMFSender' in window.RTCPeerConnection.prototype) {\r\n    const shimSenderWithDtmf = function(pc, track) {\r\n      return {\r\n        track,\r\n        get dtmf() {\r\n          if (this._dtmf === undefined) {\r\n            if (track.kind === 'audio') {\r\n              this._dtmf = pc.createDTMFSender(track);\r\n            } else {\r\n              this._dtmf = null;\r\n            }\r\n          }\r\n          return this._dtmf;\r\n        },\r\n        _pc: pc\r\n      };\r\n    };\r\n\r\n    // augment addTrack when getSenders is not available.\r\n    if (!window.RTCPeerConnection.prototype.getSenders) {\r\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\r\n        this._senders = this._senders || [];\r\n        return this._senders.slice(); // return a copy of the internal state.\r\n      };\r\n      const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\r\n      window.RTCPeerConnection.prototype.addTrack =\r\n        function addTrack(track, stream) {\r\n          let sender = origAddTrack.apply(this, arguments);\r\n          if (!sender) {\r\n            sender = shimSenderWithDtmf(this, track);\r\n            this._senders.push(sender);\r\n          }\r\n          return sender;\r\n        };\r\n\r\n      const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\r\n      window.RTCPeerConnection.prototype.removeTrack =\r\n        function removeTrack(sender) {\r\n          origRemoveTrack.apply(this, arguments);\r\n          const idx = this._senders.indexOf(sender);\r\n          if (idx !== -1) {\r\n            this._senders.splice(idx, 1);\r\n          }\r\n        };\r\n    }\r\n    const origAddStream = window.RTCPeerConnection.prototype.addStream;\r\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\r\n      this._senders = this._senders || [];\r\n      origAddStream.apply(this, [stream]);\r\n      stream.getTracks().forEach(track => {\r\n        this._senders.push(shimSenderWithDtmf(this, track));\r\n      });\r\n    };\r\n\r\n    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\r\n    window.RTCPeerConnection.prototype.removeStream =\r\n      function removeStream(stream) {\r\n        this._senders = this._senders || [];\r\n        origRemoveStream.apply(this, [stream]);\r\n\r\n        stream.getTracks().forEach(track => {\r\n          const sender = this._senders.find(s => s.track === track);\r\n          if (sender) { // remove sender\r\n            this._senders.splice(this._senders.indexOf(sender), 1);\r\n          }\r\n        });\r\n      };\r\n  } else if (typeof window === 'object' && window.RTCPeerConnection &&\r\n             'getSenders' in window.RTCPeerConnection.prototype &&\r\n             'createDTMFSender' in window.RTCPeerConnection.prototype &&\r\n             window.RTCRtpSender &&\r\n             !('dtmf' in window.RTCRtpSender.prototype)) {\r\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\r\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\r\n      const senders = origGetSenders.apply(this, []);\r\n      senders.forEach(sender => sender._pc = this);\r\n      return senders;\r\n    };\r\n\r\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\r\n      get() {\r\n        if (this._dtmf === undefined) {\r\n          if (this.track.kind === 'audio') {\r\n            this._dtmf = this._pc.createDTMFSender(this.track);\r\n          } else {\r\n            this._dtmf = null;\r\n          }\r\n        }\r\n        return this._dtmf;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function shimGetStats(window) {\r\n  if (!window.RTCPeerConnection) {\r\n    return;\r\n  }\r\n\r\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\r\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\r\n    const [selector, onSucc, onErr] = arguments;\r\n\r\n    // If selector is a function then we are in the old style stats so just\r\n    // pass back the original getStats format to avoid breaking old users.\r\n    if (arguments.length > 0 && typeof selector === 'function') {\r\n      return origGetStats.apply(this, arguments);\r\n    }\r\n\r\n    // When spec-style getStats is supported, return those when called with\r\n    // either no arguments or the selector argument is null.\r\n    if (origGetStats.length === 0 && (arguments.length === 0 ||\r\n        typeof selector !== 'function')) {\r\n      return origGetStats.apply(this, []);\r\n    }\r\n\r\n    const fixChromeStats_ = function(response) {\r\n      const standardReport = {};\r\n      const reports = response.result();\r\n      reports.forEach(report => {\r\n        const standardStats = {\r\n          id: report.id,\r\n          timestamp: report.timestamp,\r\n          type: {\r\n            localcandidate: 'local-candidate',\r\n            remotecandidate: 'remote-candidate'\r\n          }[report.type] || report.type\r\n        };\r\n        report.names().forEach(name => {\r\n          standardStats[name] = report.stat(name);\r\n        });\r\n        standardReport[standardStats.id] = standardStats;\r\n      });\r\n\r\n      return standardReport;\r\n    };\r\n\r\n    // shim getStats with maplike support\r\n    const makeMapStats = function(stats) {\r\n      return new Map(Object.keys(stats).map(key => [key, stats[key]]));\r\n    };\r\n\r\n    if (arguments.length >= 2) {\r\n      const successCallbackWrapper_ = function(response) {\r\n        onSucc(makeMapStats(fixChromeStats_(response)));\r\n      };\r\n\r\n      return origGetStats.apply(this, [successCallbackWrapper_,\r\n        selector]);\r\n    }\r\n\r\n    // promise-support\r\n    return new Promise((resolve, reject) => {\r\n      origGetStats.apply(this, [\r\n        function(response) {\r\n          resolve(makeMapStats(fixChromeStats_(response)));\r\n        }, reject]);\r\n    }).then(onSucc, onErr);\r\n  };\r\n}\r\n\r\nexport function shimSenderReceiverGetStats(window) {\r\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\r\n      window.RTCRtpSender && window.RTCRtpReceiver)) {\r\n    return;\r\n  }\r\n\r\n  // shim sender stats.\r\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\r\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\r\n    if (origGetSenders) {\r\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\r\n        const senders = origGetSenders.apply(this, []);\r\n        senders.forEach(sender => sender._pc = this);\r\n        return senders;\r\n      };\r\n    }\r\n\r\n    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\r\n    if (origAddTrack) {\r\n      window.RTCPeerConnection.prototype.addTrack = function addTrack() {\r\n        const sender = origAddTrack.apply(this, arguments);\r\n        sender._pc = this;\r\n        return sender;\r\n      };\r\n    }\r\n    window.RTCRtpSender.prototype.getStats = function getStats() {\r\n      const sender = this;\r\n      return this._pc.getStats().then(result =>\r\n        /* Note: this will include stats of all senders that\r\n         *   send a track with the same id as sender.track as\r\n         *   it is not possible to identify the RTCRtpSender.\r\n         */\r\n        utils.filterStats(result, sender.track, true));\r\n    };\r\n  }\r\n\r\n  // shim receiver stats.\r\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\r\n    const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\r\n    if (origGetReceivers) {\r\n      window.RTCPeerConnection.prototype.getReceivers =\r\n        function getReceivers() {\r\n          const receivers = origGetReceivers.apply(this, []);\r\n          receivers.forEach(receiver => receiver._pc = this);\r\n          return receivers;\r\n        };\r\n    }\r\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\r\n      e.receiver._pc = e.srcElement;\r\n      return e;\r\n    });\r\n    window.RTCRtpReceiver.prototype.getStats = function getStats() {\r\n      const receiver = this;\r\n      return this._pc.getStats().then(result =>\r\n        utils.filterStats(result, receiver.track, false));\r\n    };\r\n  }\r\n\r\n  if (!('getStats' in window.RTCRtpSender.prototype &&\r\n      'getStats' in window.RTCRtpReceiver.prototype)) {\r\n    return;\r\n  }\r\n\r\n  // shim RTCPeerConnection.getStats(track).\r\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\r\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\r\n    if (arguments.length > 0 &&\r\n        arguments[0] instanceof window.MediaStreamTrack) {\r\n      const track = arguments[0];\r\n      let sender;\r\n      let receiver;\r\n      let err;\r\n      this.getSenders().forEach(s => {\r\n        if (s.track === track) {\r\n          if (sender) {\r\n            err = true;\r\n          } else {\r\n            sender = s;\r\n          }\r\n        }\r\n      });\r\n      this.getReceivers().forEach(r => {\r\n        if (r.track === track) {\r\n          if (receiver) {\r\n            err = true;\r\n          } else {\r\n            receiver = r;\r\n          }\r\n        }\r\n        return r.track === track;\r\n      });\r\n      if (err || (sender && receiver)) {\r\n        return Promise.reject(new DOMException(\r\n          'There are more than one sender or receiver for the track.',\r\n          'InvalidAccessError'));\r\n      } else if (sender) {\r\n        return sender.getStats();\r\n      } else if (receiver) {\r\n        return receiver.getStats();\r\n      }\r\n      return Promise.reject(new DOMException(\r\n        'There is no sender or receiver for the track.',\r\n        'InvalidAccessError'));\r\n    }\r\n    return origGetStats.apply(this, arguments);\r\n  };\r\n}\r\n\r\nexport function shimAddTrackRemoveTrackWithNative(window) {\r\n  // shim addTrack/removeTrack with native variants in order to make\r\n  // the interactions with legacy getLocalStreams behave as in other browsers.\r\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\r\n  window.RTCPeerConnection.prototype.getLocalStreams =\r\n    function getLocalStreams() {\r\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\r\n      return Object.keys(this._shimmedLocalStreams)\r\n        .map(streamId => this._shimmedLocalStreams[streamId][0]);\r\n    };\r\n\r\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\r\n  window.RTCPeerConnection.prototype.addTrack =\r\n    function addTrack(track, stream) {\r\n      if (!stream) {\r\n        return origAddTrack.apply(this, arguments);\r\n      }\r\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\r\n\r\n      const sender = origAddTrack.apply(this, arguments);\r\n      if (!this._shimmedLocalStreams[stream.id]) {\r\n        this._shimmedLocalStreams[stream.id] = [stream, sender];\r\n      } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\r\n        this._shimmedLocalStreams[stream.id].push(sender);\r\n      }\r\n      return sender;\r\n    };\r\n\r\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\r\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\r\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\r\n\r\n    stream.getTracks().forEach(track => {\r\n      const alreadyExists = this.getSenders().find(s => s.track === track);\r\n      if (alreadyExists) {\r\n        throw new DOMException('Track already exists.',\r\n            'InvalidAccessError');\r\n      }\r\n    });\r\n    const existingSenders = this.getSenders();\r\n    origAddStream.apply(this, arguments);\r\n    const newSenders = this.getSenders()\r\n      .filter(newSender => existingSenders.indexOf(newSender) === -1);\r\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\r\n  };\r\n\r\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\r\n  window.RTCPeerConnection.prototype.removeStream =\r\n    function removeStream(stream) {\r\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\r\n      delete this._shimmedLocalStreams[stream.id];\r\n      return origRemoveStream.apply(this, arguments);\r\n    };\r\n\r\n  const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\r\n  window.RTCPeerConnection.prototype.removeTrack =\r\n    function removeTrack(sender) {\r\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\r\n      if (sender) {\r\n        Object.keys(this._shimmedLocalStreams).forEach(streamId => {\r\n          const idx = this._shimmedLocalStreams[streamId].indexOf(sender);\r\n          if (idx !== -1) {\r\n            this._shimmedLocalStreams[streamId].splice(idx, 1);\r\n          }\r\n          if (this._shimmedLocalStreams[streamId].length === 1) {\r\n            delete this._shimmedLocalStreams[streamId];\r\n          }\r\n        });\r\n      }\r\n      return origRemoveTrack.apply(this, arguments);\r\n    };\r\n}\r\n\r\nexport function shimAddTrackRemoveTrack(window, browserDetails) {\r\n  if (!window.RTCPeerConnection) {\r\n    return;\r\n  }\r\n  // shim addTrack and removeTrack.\r\n  if (window.RTCPeerConnection.prototype.addTrack &&\r\n      browserDetails.version >= 65) {\r\n    return shimAddTrackRemoveTrackWithNative(window);\r\n  }\r\n\r\n  // also shim pc.getLocalStreams when addTrack is shimmed\r\n  // to return the original streams.\r\n  const origGetLocalStreams = window.RTCPeerConnection.prototype\r\n      .getLocalStreams;\r\n  window.RTCPeerConnection.prototype.getLocalStreams =\r\n    function getLocalStreams() {\r\n      const nativeStreams = origGetLocalStreams.apply(this);\r\n      this._reverseStreams = this._reverseStreams || {};\r\n      return nativeStreams.map(stream => this._reverseStreams[stream.id]);\r\n    };\r\n\r\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\r\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\r\n    this._streams = this._streams || {};\r\n    this._reverseStreams = this._reverseStreams || {};\r\n\r\n    stream.getTracks().forEach(track => {\r\n      const alreadyExists = this.getSenders().find(s => s.track === track);\r\n      if (alreadyExists) {\r\n        throw new DOMException('Track already exists.',\r\n            'InvalidAccessError');\r\n      }\r\n    });\r\n    // Add identity mapping for consistency with addTrack.\r\n    // Unless this is being used with a stream from addTrack.\r\n    if (!this._reverseStreams[stream.id]) {\r\n      const newStream = new window.MediaStream(stream.getTracks());\r\n      this._streams[stream.id] = newStream;\r\n      this._reverseStreams[newStream.id] = stream;\r\n      stream = newStream;\r\n    }\r\n    origAddStream.apply(this, [stream]);\r\n  };\r\n\r\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\r\n  window.RTCPeerConnection.prototype.removeStream =\r\n    function removeStream(stream) {\r\n      this._streams = this._streams || {};\r\n      this._reverseStreams = this._reverseStreams || {};\r\n\r\n      origRemoveStream.apply(this, [(this._streams[stream.id] || stream)]);\r\n      delete this._reverseStreams[(this._streams[stream.id] ?\r\n          this._streams[stream.id].id : stream.id)];\r\n      delete this._streams[stream.id];\r\n    };\r\n\r\n  window.RTCPeerConnection.prototype.addTrack =\r\n    function addTrack(track, stream) {\r\n      if (this.signalingState === 'closed') {\r\n        throw new DOMException(\r\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\r\n          'InvalidStateError');\r\n      }\r\n      const streams = [].slice.call(arguments, 1);\r\n      if (streams.length !== 1 ||\r\n          !streams[0].getTracks().find(t => t === track)) {\r\n        // this is not fully correct but all we can manage without\r\n        // [[associated MediaStreams]] internal slot.\r\n        throw new DOMException(\r\n          'The adapter.js addTrack polyfill only supports a single ' +\r\n          ' stream which is associated with the specified track.',\r\n          'NotSupportedError');\r\n      }\r\n\r\n      const alreadyExists = this.getSenders().find(s => s.track === track);\r\n      if (alreadyExists) {\r\n        throw new DOMException('Track already exists.',\r\n            'InvalidAccessError');\r\n      }\r\n\r\n      this._streams = this._streams || {};\r\n      this._reverseStreams = this._reverseStreams || {};\r\n      const oldStream = this._streams[stream.id];\r\n      if (oldStream) {\r\n        // this is using odd Chrome behaviour, use with caution:\r\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\r\n        // Note: we rely on the high-level addTrack/dtmf shim to\r\n        // create the sender with a dtmf sender.\r\n        oldStream.addTrack(track);\r\n\r\n        // Trigger ONN async.\r\n        Promise.resolve().then(() => {\r\n          this.dispatchEvent(new Event('negotiationneeded'));\r\n        });\r\n      } else {\r\n        const newStream = new window.MediaStream([track]);\r\n        this._streams[stream.id] = newStream;\r\n        this._reverseStreams[newStream.id] = stream;\r\n        this.addStream(newStream);\r\n      }\r\n      return this.getSenders().find(s => s.track === track);\r\n    };\r\n\r\n  // replace the internal stream id with the external one and\r\n  // vice versa.\r\n  function replaceInternalStreamId(pc, description) {\r\n    let sdp = description.sdp;\r\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\r\n      const externalStream = pc._reverseStreams[internalId];\r\n      const internalStream = pc._streams[externalStream.id];\r\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\r\n          externalStream.id);\r\n    });\r\n    return new RTCSessionDescription({\r\n      type: description.type,\r\n      sdp\r\n    });\r\n  }\r\n  function replaceExternalStreamId(pc, description) {\r\n    let sdp = description.sdp;\r\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\r\n      const externalStream = pc._reverseStreams[internalId];\r\n      const internalStream = pc._streams[externalStream.id];\r\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\r\n          internalStream.id);\r\n    });\r\n    return new RTCSessionDescription({\r\n      type: description.type,\r\n      sdp\r\n    });\r\n  }\r\n  ['createOffer', 'createAnswer'].forEach(function(method) {\r\n    const nativeMethod = window.RTCPeerConnection.prototype[method];\r\n    const methodObj = {[method]() {\r\n      const args = arguments;\r\n      const isLegacyCall = arguments.length &&\r\n          typeof arguments[0] === 'function';\r\n      if (isLegacyCall) {\r\n        return nativeMethod.apply(this, [\r\n          (description) => {\r\n            const desc = replaceInternalStreamId(this, description);\r\n            args[0].apply(null, [desc]);\r\n          },\r\n          (err) => {\r\n            if (args[1]) {\r\n              args[1].apply(null, err);\r\n            }\r\n          }, arguments[2]\r\n        ]);\r\n      }\r\n      return nativeMethod.apply(this, arguments)\r\n      .then(description => replaceInternalStreamId(this, description));\r\n    }};\r\n    window.RTCPeerConnection.prototype[method] = methodObj[method];\r\n  });\r\n\r\n  const origSetLocalDescription =\r\n      window.RTCPeerConnection.prototype.setLocalDescription;\r\n  window.RTCPeerConnection.prototype.setLocalDescription =\r\n    function setLocalDescription() {\r\n      if (!arguments.length || !arguments[0].type) {\r\n        return origSetLocalDescription.apply(this, arguments);\r\n      }\r\n      arguments[0] = replaceExternalStreamId(this, arguments[0]);\r\n      return origSetLocalDescription.apply(this, arguments);\r\n    };\r\n\r\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\r\n\r\n  const origLocalDescription = Object.getOwnPropertyDescriptor(\r\n      window.RTCPeerConnection.prototype, 'localDescription');\r\n  Object.defineProperty(window.RTCPeerConnection.prototype,\r\n      'localDescription', {\r\n        get() {\r\n          const description = origLocalDescription.get.apply(this);\r\n          if (description.type === '') {\r\n            return description;\r\n          }\r\n          return replaceInternalStreamId(this, description);\r\n        }\r\n      });\r\n\r\n  window.RTCPeerConnection.prototype.removeTrack =\r\n    function removeTrack(sender) {\r\n      if (this.signalingState === 'closed') {\r\n        throw new DOMException(\r\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\r\n          'InvalidStateError');\r\n      }\r\n      // We can not yet check for sender instanceof RTCRtpSender\r\n      // since we shim RTPSender. So we check if sender._pc is set.\r\n      if (!sender._pc) {\r\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\r\n            'does not implement interface RTCRtpSender.', 'TypeError');\r\n      }\r\n      const isLocal = sender._pc === this;\r\n      if (!isLocal) {\r\n        throw new DOMException('Sender was not created by this connection.',\r\n            'InvalidAccessError');\r\n      }\r\n\r\n      // Search for the native stream the senders track belongs to.\r\n      this._streams = this._streams || {};\r\n      let stream;\r\n      Object.keys(this._streams).forEach(streamid => {\r\n        const hasTrack = this._streams[streamid].getTracks()\r\n          .find(track => sender.track === track);\r\n        if (hasTrack) {\r\n          stream = this._streams[streamid];\r\n        }\r\n      });\r\n\r\n      if (stream) {\r\n        if (stream.getTracks().length === 1) {\r\n          // if this is the last track of the stream, remove the stream. This\r\n          // takes care of any shimmed _senders.\r\n          this.removeStream(this._reverseStreams[stream.id]);\r\n        } else {\r\n          // relying on the same odd chrome behaviour as above.\r\n          stream.removeTrack(sender.track);\r\n        }\r\n        this.dispatchEvent(new Event('negotiationneeded'));\r\n      }\r\n    };\r\n}\r\n\r\nexport function shimPeerConnection(window, browserDetails) {\r\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\r\n    // very basic support for old versions.\r\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\r\n  }\r\n  if (!window.RTCPeerConnection) {\r\n    return;\r\n  }\r\n\r\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\r\n  if (browserDetails.version < 53) {\r\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\r\n        .forEach(function(method) {\r\n          const nativeMethod = window.RTCPeerConnection.prototype[method];\r\n          const methodObj = {[method]() {\r\n            arguments[0] = new ((method === 'addIceCandidate') ?\r\n                window.RTCIceCandidate :\r\n                window.RTCSessionDescription)(arguments[0]);\r\n            return nativeMethod.apply(this, arguments);\r\n          }};\r\n          window.RTCPeerConnection.prototype[method] = methodObj[method];\r\n        });\r\n  }\r\n}\r\n\r\n// Attempt to fix ONN in plan-b mode.\r\nexport function fixNegotiationNeeded(window, browserDetails) {\r\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', e => {\r\n    const pc = e.target;\r\n    if (browserDetails.version < 72 || (pc.getConfiguration &&\r\n        pc.getConfiguration().sdpSemantics === 'plan-b')) {\r\n      if (pc.signalingState !== 'stable') {\r\n        return;\r\n      }\r\n    }\r\n    return e;\r\n  });\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;AACD,YAAY;;AAAC;AACb,OAAO,KAAKA,KAAK,MAAM,aAAa;AAEpC,SAAQC,gBAAgB,QAAO,gBAAgB;AAC/C,SAAQC,mBAAmB,QAAO,mBAAmB;AAErD,OAAO,SAASC,eAAe,CAACC,MAAM,EAAE;EACtCA,MAAM,CAACC,WAAW,GAAGD,MAAM,CAACC,WAAW,IAAID,MAAM,CAACE,iBAAiB;AACrE;AAEA,OAAO,SAASC,WAAW,CAACH,MAAM,EAAE;EAClC,IAAI,OAAOA,MAAM,KAAK,QAAQ,IAAIA,MAAM,CAACI,iBAAiB,IAAI,EAAE,SAAS,IACrEJ,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAAC,EAAE;IACvCC,MAAM,CAACC,cAAc,CAACP,MAAM,CAACI,iBAAiB,CAACC,SAAS,EAAE,SAAS,EAAE;MACnEG,GAAG,iBAAG;QACJ,OAAO,IAAI,CAACC,QAAQ;MACtB,CAAC;MACDC,GAAG,eAACC,CAAC,EAAE;QACL,IAAI,IAAI,CAACF,QAAQ,EAAE;UACjB,IAAI,CAACG,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAACH,QAAQ,CAAC;QAClD;QACA,IAAI,CAACI,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACJ,QAAQ,GAAGE,CAAC,CAAC;MACnD,CAAC;MACDG,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE;IAChB,CAAC,CAAC;IACF,IAAMC,wBAAwB,GAC1BhB,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAACY,oBAAoB;IAC3DjB,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAACY,oBAAoB,GACrD,SAASA,oBAAoB,GAAG;MAAA;MAC9B,IAAI,CAAC,IAAI,CAACC,YAAY,EAAE;QACtB,IAAI,CAACA,YAAY,GAAG,UAACC,CAAC,EAAK;UACzB;UACA;UACAA,CAAC,CAACC,MAAM,CAACP,gBAAgB,CAAC,UAAU,EAAE,UAAAQ,EAAE,EAAI;YAC1C,IAAIC,QAAQ;YACZ,IAAItB,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAACkB,YAAY,EAAE;cACnDD,QAAQ,GAAG,KAAI,CAACC,YAAY,EAAE,CAC3BC,IAAI,CAAC,UAAAC,CAAC;gBAAA,OAAIA,CAAC,CAACC,KAAK,IAAID,CAAC,CAACC,KAAK,CAACC,EAAE,KAAKN,EAAE,CAACK,KAAK,CAACC,EAAE;cAAA,EAAC;YACrD,CAAC,MAAM;cACLL,QAAQ,GAAG;gBAACI,KAAK,EAAEL,EAAE,CAACK;cAAK,CAAC;YAC9B;YAEA,IAAME,KAAK,GAAG,IAAIC,KAAK,CAAC,OAAO,CAAC;YAChCD,KAAK,CAACF,KAAK,GAAGL,EAAE,CAACK,KAAK;YACtBE,KAAK,CAACN,QAAQ,GAAGA,QAAQ;YACzBM,KAAK,CAACE,WAAW,GAAG;cAACR,QAAQ,EAARA;YAAQ,CAAC;YAC9BM,KAAK,CAACG,OAAO,GAAG,CAACZ,CAAC,CAACC,MAAM,CAAC;YAC1B,KAAI,CAACY,aAAa,CAACJ,KAAK,CAAC;UAC3B,CAAC,CAAC;UACFT,CAAC,CAACC,MAAM,CAACa,SAAS,EAAE,CAACC,OAAO,CAAC,UAAAR,KAAK,EAAI;YACpC,IAAIJ,QAAQ;YACZ,IAAItB,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAACkB,YAAY,EAAE;cACnDD,QAAQ,GAAG,KAAI,CAACC,YAAY,EAAE,CAC3BC,IAAI,CAAC,UAAAC,CAAC;gBAAA,OAAIA,CAAC,CAACC,KAAK,IAAID,CAAC,CAACC,KAAK,CAACC,EAAE,KAAKD,KAAK,CAACC,EAAE;cAAA,EAAC;YAClD,CAAC,MAAM;cACLL,QAAQ,GAAG;gBAACI,KAAK,EAALA;cAAK,CAAC;YACpB;YACA,IAAME,KAAK,GAAG,IAAIC,KAAK,CAAC,OAAO,CAAC;YAChCD,KAAK,CAACF,KAAK,GAAGA,KAAK;YACnBE,KAAK,CAACN,QAAQ,GAAGA,QAAQ;YACzBM,KAAK,CAACE,WAAW,GAAG;cAACR,QAAQ,EAARA;YAAQ,CAAC;YAC9BM,KAAK,CAACG,OAAO,GAAG,CAACZ,CAAC,CAACC,MAAM,CAAC;YAC1B,KAAI,CAACY,aAAa,CAACJ,KAAK,CAAC;UAC3B,CAAC,CAAC;QACJ,CAAC;QACD,IAAI,CAACf,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAACK,YAAY,CAAC;MACvD;MACA,OAAOF,wBAAwB,CAACmB,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IACxD,CAAC;EACL,CAAC,MAAM;IACL;IACA;IACA;IACAxC,KAAK,CAACyC,uBAAuB,CAACrC,MAAM,EAAE,OAAO,EAAE,UAAAmB,CAAC,EAAI;MAClD,IAAI,CAACA,CAAC,CAACW,WAAW,EAAE;QAClBxB,MAAM,CAACC,cAAc,CAACY,CAAC,EAAE,aAAa,EACpC;UAACmB,KAAK,EAAE;YAAChB,QAAQ,EAAEH,CAAC,CAACG;UAAQ;QAAC,CAAC,CAAC;MACpC;MACA,OAAOH,CAAC;IACV,CAAC,CAAC;EACJ;AACF;AAEA,OAAO,SAASoB,sBAAsB,CAACvC,MAAM,EAAE;EAC7C;EACA,IAAI,OAAOA,MAAM,KAAK,QAAQ,IAAIA,MAAM,CAACI,iBAAiB,IACtD,EAAE,YAAY,IAAIJ,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAAC,IACrD,kBAAkB,IAAIL,MAAM,CAACI,iBAAiB,CAACC,SAAS,EAAE;IAC5D,IAAMmC,kBAAkB,GAAG,SAArBA,kBAAkB,CAAYC,EAAE,EAAEf,KAAK,EAAE;MAC7C,OAAO;QACLA,KAAK,EAALA,KAAK;QACL,IAAIgB,IAAI,GAAG;UACT,IAAI,IAAI,CAACC,KAAK,KAAKC,SAAS,EAAE;YAC5B,IAAIlB,KAAK,CAACmB,IAAI,KAAK,OAAO,EAAE;cAC1B,IAAI,CAACF,KAAK,GAAGF,EAAE,CAACK,gBAAgB,CAACpB,KAAK,CAAC;YACzC,CAAC,MAAM;cACL,IAAI,CAACiB,KAAK,GAAG,IAAI;YACnB;UACF;UACA,OAAO,IAAI,CAACA,KAAK;QACnB,CAAC;QACDI,GAAG,EAAEN;MACP,CAAC;IACH,CAAC;;IAED;IACA,IAAI,CAACzC,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAAC2C,UAAU,EAAE;MAClDhD,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAAC2C,UAAU,GAAG,SAASA,UAAU,GAAG;QACpE,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACA,QAAQ,IAAI,EAAE;QACnC,OAAO,IAAI,CAACA,QAAQ,CAACC,KAAK,EAAE,CAAC,CAAC;MAChC,CAAC;;MACD,IAAMC,YAAY,GAAGnD,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAAC+C,QAAQ;MAChEpD,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAAC+C,QAAQ,GACzC,SAASA,QAAQ,CAAC1B,KAAK,EAAEN,MAAM,EAAE;QAC/B,IAAIiC,MAAM,GAAGF,YAAY,CAAChB,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;QAChD,IAAI,CAACiB,MAAM,EAAE;UACXA,MAAM,GAAGb,kBAAkB,CAAC,IAAI,EAAEd,KAAK,CAAC;UACxC,IAAI,CAACuB,QAAQ,CAACK,IAAI,CAACD,MAAM,CAAC;QAC5B;QACA,OAAOA,MAAM;MACf,CAAC;MAEH,IAAME,eAAe,GAAGvD,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAACmD,WAAW;MACtExD,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAACmD,WAAW,GAC5C,SAASA,WAAW,CAACH,MAAM,EAAE;QAC3BE,eAAe,CAACpB,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;QACtC,IAAMqB,GAAG,GAAG,IAAI,CAACR,QAAQ,CAACS,OAAO,CAACL,MAAM,CAAC;QACzC,IAAII,GAAG,KAAK,CAAC,CAAC,EAAE;UACd,IAAI,CAACR,QAAQ,CAACU,MAAM,CAACF,GAAG,EAAE,CAAC,CAAC;QAC9B;MACF,CAAC;IACL;IACA,IAAMG,aAAa,GAAG5D,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAACwD,SAAS;IAClE7D,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAACwD,SAAS,GAAG,SAASA,SAAS,CAACzC,MAAM,EAAE;MAAA;MACxE,IAAI,CAAC6B,QAAQ,GAAG,IAAI,CAACA,QAAQ,IAAI,EAAE;MACnCW,aAAa,CAACzB,KAAK,CAAC,IAAI,EAAE,CAACf,MAAM,CAAC,CAAC;MACnCA,MAAM,CAACa,SAAS,EAAE,CAACC,OAAO,CAAC,UAAAR,KAAK,EAAI;QAClC,MAAI,CAACuB,QAAQ,CAACK,IAAI,CAACd,kBAAkB,CAAC,MAAI,EAAEd,KAAK,CAAC,CAAC;MACrD,CAAC,CAAC;IACJ,CAAC;IAED,IAAMoC,gBAAgB,GAAG9D,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAAC0D,YAAY;IACxE/D,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAAC0D,YAAY,GAC7C,SAASA,YAAY,CAAC3C,MAAM,EAAE;MAAA;MAC5B,IAAI,CAAC6B,QAAQ,GAAG,IAAI,CAACA,QAAQ,IAAI,EAAE;MACnCa,gBAAgB,CAAC3B,KAAK,CAAC,IAAI,EAAE,CAACf,MAAM,CAAC,CAAC;MAEtCA,MAAM,CAACa,SAAS,EAAE,CAACC,OAAO,CAAC,UAAAR,KAAK,EAAI;QAClC,IAAM2B,MAAM,GAAG,MAAI,CAACJ,QAAQ,CAACzB,IAAI,CAAC,UAAAwC,CAAC;UAAA,OAAIA,CAAC,CAACtC,KAAK,KAAKA,KAAK;QAAA,EAAC;QACzD,IAAI2B,MAAM,EAAE;UAAE;UACZ,MAAI,CAACJ,QAAQ,CAACU,MAAM,CAAC,MAAI,CAACV,QAAQ,CAACS,OAAO,CAACL,MAAM,CAAC,EAAE,CAAC,CAAC;QACxD;MACF,CAAC,CAAC;IACJ,CAAC;EACL,CAAC,MAAM,IAAI,OAAOrD,MAAM,KAAK,QAAQ,IAAIA,MAAM,CAACI,iBAAiB,IACtD,YAAY,IAAIJ,MAAM,CAACI,iBAAiB,CAACC,SAAS,IAClD,kBAAkB,IAAIL,MAAM,CAACI,iBAAiB,CAACC,SAAS,IACxDL,MAAM,CAACiE,YAAY,IACnB,EAAE,MAAM,IAAIjE,MAAM,CAACiE,YAAY,CAAC5D,SAAS,CAAC,EAAE;IACrD,IAAM6D,cAAc,GAAGlE,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAAC2C,UAAU;IACpEhD,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAAC2C,UAAU,GAAG,SAASA,UAAU,GAAG;MAAA;MACpE,IAAMmB,OAAO,GAAGD,cAAc,CAAC/B,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC;MAC9CgC,OAAO,CAACjC,OAAO,CAAC,UAAAmB,MAAM;QAAA,OAAIA,MAAM,CAACN,GAAG,GAAG,MAAI;MAAA,EAAC;MAC5C,OAAOoB,OAAO;IAChB,CAAC;IAED7D,MAAM,CAACC,cAAc,CAACP,MAAM,CAACiE,YAAY,CAAC5D,SAAS,EAAE,MAAM,EAAE;MAC3DG,GAAG,iBAAG;QACJ,IAAI,IAAI,CAACmC,KAAK,KAAKC,SAAS,EAAE;UAC5B,IAAI,IAAI,CAAClB,KAAK,CAACmB,IAAI,KAAK,OAAO,EAAE;YAC/B,IAAI,CAACF,KAAK,GAAG,IAAI,CAACI,GAAG,CAACD,gBAAgB,CAAC,IAAI,CAACpB,KAAK,CAAC;UACpD,CAAC,MAAM;YACL,IAAI,CAACiB,KAAK,GAAG,IAAI;UACnB;QACF;QACA,OAAO,IAAI,CAACA,KAAK;MACnB;IACF,CAAC,CAAC;EACJ;AACF;AAEA,OAAO,SAASyB,YAAY,CAACpE,MAAM,EAAE;EACnC,IAAI,CAACA,MAAM,CAACI,iBAAiB,EAAE;IAC7B;EACF;EAEA,IAAMiE,YAAY,GAAGrE,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAACiE,QAAQ;EAChEtE,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAACiE,QAAQ,GAAG,SAASA,QAAQ,GAAG;IAAA;IAChE,4CAAkClC,SAAS;MAApCmC,QAAQ;MAAEC,MAAM;MAAEC,KAAK;;IAE9B;IACA;IACA,IAAIrC,SAAS,CAACsC,MAAM,GAAG,CAAC,IAAI,OAAOH,QAAQ,KAAK,UAAU,EAAE;MAC1D,OAAOF,YAAY,CAAClC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IAC5C;;IAEA;IACA;IACA,IAAIiC,YAAY,CAACK,MAAM,KAAK,CAAC,KAAKtC,SAAS,CAACsC,MAAM,KAAK,CAAC,IACpD,OAAOH,QAAQ,KAAK,UAAU,CAAC,EAAE;MACnC,OAAOF,YAAY,CAAClC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC;IACrC;IAEA,IAAMwC,eAAe,GAAG,SAAlBA,eAAe,CAAYC,QAAQ,EAAE;MACzC,IAAMC,cAAc,GAAG,CAAC,CAAC;MACzB,IAAMC,OAAO,GAAGF,QAAQ,CAACG,MAAM,EAAE;MACjCD,OAAO,CAAC5C,OAAO,CAAC,UAAA8C,MAAM,EAAI;QACxB,IAAMC,aAAa,GAAG;UACpBtD,EAAE,EAAEqD,MAAM,CAACrD,EAAE;UACbuD,SAAS,EAAEF,MAAM,CAACE,SAAS;UAC3BC,IAAI,EAAE;YACJC,cAAc,EAAE,iBAAiB;YACjCC,eAAe,EAAE;UACnB,CAAC,CAACL,MAAM,CAACG,IAAI,CAAC,IAAIH,MAAM,CAACG;QAC3B,CAAC;QACDH,MAAM,CAACM,KAAK,EAAE,CAACpD,OAAO,CAAC,UAAAqD,IAAI,EAAI;UAC7BN,aAAa,CAACM,IAAI,CAAC,GAAGP,MAAM,CAACQ,IAAI,CAACD,IAAI,CAAC;QACzC,CAAC,CAAC;QACFV,cAAc,CAACI,aAAa,CAACtD,EAAE,CAAC,GAAGsD,aAAa;MAClD,CAAC,CAAC;MAEF,OAAOJ,cAAc;IACvB,CAAC;;IAED;IACA,IAAMY,YAAY,GAAG,SAAfA,YAAY,CAAYC,KAAK,EAAE;MACnC,OAAO,IAAIC,GAAG,CAACrF,MAAM,CAACsF,IAAI,CAACF,KAAK,CAAC,CAACG,GAAG,CAAC,UAAAC,GAAG;QAAA,OAAI,CAACA,GAAG,EAAEJ,KAAK,CAACI,GAAG,CAAC,CAAC;MAAA,EAAC,CAAC;IAClE,CAAC;IAED,IAAI1D,SAAS,CAACsC,MAAM,IAAI,CAAC,EAAE;MACzB,IAAMqB,uBAAuB,GAAG,SAA1BA,uBAAuB,CAAYnB,QAAQ,EAAE;QACjDJ,MAAM,CAACiB,YAAY,CAACd,eAAe,CAACC,QAAQ,CAAC,CAAC,CAAC;MACjD,CAAC;MAED,OAAOP,YAAY,CAAClC,KAAK,CAAC,IAAI,EAAE,CAAC4D,uBAAuB,EACtDxB,QAAQ,CAAC,CAAC;IACd;;IAEA;IACA,OAAO,IAAIyB,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;MACtC7B,YAAY,CAAClC,KAAK,CAAC,MAAI,EAAE,CACvB,UAASyC,QAAQ,EAAE;QACjBqB,OAAO,CAACR,YAAY,CAACd,eAAe,CAACC,QAAQ,CAAC,CAAC,CAAC;MAClD,CAAC,EAAEsB,MAAM,CAAC,CAAC;IACf,CAAC,CAAC,CAACC,IAAI,CAAC3B,MAAM,EAAEC,KAAK,CAAC;EACxB,CAAC;AACH;AAEA,OAAO,SAAS2B,0BAA0B,CAACpG,MAAM,EAAE;EACjD,IAAI,EAAE,OAAOA,MAAM,KAAK,QAAQ,IAAIA,MAAM,CAACI,iBAAiB,IACxDJ,MAAM,CAACiE,YAAY,IAAIjE,MAAM,CAACqG,cAAc,CAAC,EAAE;IACjD;EACF;;EAEA;EACA,IAAI,EAAE,UAAU,IAAIrG,MAAM,CAACiE,YAAY,CAAC5D,SAAS,CAAC,EAAE;IAClD,IAAM6D,cAAc,GAAGlE,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAAC2C,UAAU;IACpE,IAAIkB,cAAc,EAAE;MAClBlE,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAAC2C,UAAU,GAAG,SAASA,UAAU,GAAG;QAAA;QACpE,IAAMmB,OAAO,GAAGD,cAAc,CAAC/B,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC;QAC9CgC,OAAO,CAACjC,OAAO,CAAC,UAAAmB,MAAM;UAAA,OAAIA,MAAM,CAACN,GAAG,GAAG,MAAI;QAAA,EAAC;QAC5C,OAAOoB,OAAO;MAChB,CAAC;IACH;IAEA,IAAMhB,YAAY,GAAGnD,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAAC+C,QAAQ;IAChE,IAAID,YAAY,EAAE;MAChBnD,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAAC+C,QAAQ,GAAG,SAASA,QAAQ,GAAG;QAChE,IAAMC,MAAM,GAAGF,YAAY,CAAChB,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;QAClDiB,MAAM,CAACN,GAAG,GAAG,IAAI;QACjB,OAAOM,MAAM;MACf,CAAC;IACH;IACArD,MAAM,CAACiE,YAAY,CAAC5D,SAAS,CAACiE,QAAQ,GAAG,SAASA,QAAQ,GAAG;MAC3D,IAAMjB,MAAM,GAAG,IAAI;MACnB,OAAO,IAAI,CAACN,GAAG,CAACuB,QAAQ,EAAE,CAAC6B,IAAI,CAAC,UAAApB,MAAM;QAAA;UACpC;AACR;AACA;AACA;UACQnF,KAAK,CAAC0G,WAAW,CAACvB,MAAM,EAAE1B,MAAM,CAAC3B,KAAK,EAAE,IAAI;QAAC;MAAA,EAAC;IAClD,CAAC;EACH;;EAEA;EACA,IAAI,EAAE,UAAU,IAAI1B,MAAM,CAACqG,cAAc,CAAChG,SAAS,CAAC,EAAE;IACpD,IAAMkG,gBAAgB,GAAGvG,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAACkB,YAAY;IACxE,IAAIgF,gBAAgB,EAAE;MACpBvG,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAACkB,YAAY,GAC7C,SAASA,YAAY,GAAG;QAAA;QACtB,IAAMiF,SAAS,GAAGD,gBAAgB,CAACpE,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC;QAClDqE,SAAS,CAACtE,OAAO,CAAC,UAAAZ,QAAQ;UAAA,OAAIA,QAAQ,CAACyB,GAAG,GAAG,MAAI;QAAA,EAAC;QAClD,OAAOyD,SAAS;MAClB,CAAC;IACL;IACA5G,KAAK,CAACyC,uBAAuB,CAACrC,MAAM,EAAE,OAAO,EAAE,UAAAmB,CAAC,EAAI;MAClDA,CAAC,CAACG,QAAQ,CAACyB,GAAG,GAAG5B,CAAC,CAACsF,UAAU;MAC7B,OAAOtF,CAAC;IACV,CAAC,CAAC;IACFnB,MAAM,CAACqG,cAAc,CAAChG,SAAS,CAACiE,QAAQ,GAAG,SAASA,QAAQ,GAAG;MAC7D,IAAMhD,QAAQ,GAAG,IAAI;MACrB,OAAO,IAAI,CAACyB,GAAG,CAACuB,QAAQ,EAAE,CAAC6B,IAAI,CAAC,UAAApB,MAAM;QAAA,OACpCnF,KAAK,CAAC0G,WAAW,CAACvB,MAAM,EAAEzD,QAAQ,CAACI,KAAK,EAAE,KAAK,CAAC;MAAA,EAAC;IACrD,CAAC;EACH;EAEA,IAAI,EAAE,UAAU,IAAI1B,MAAM,CAACiE,YAAY,CAAC5D,SAAS,IAC7C,UAAU,IAAIL,MAAM,CAACqG,cAAc,CAAChG,SAAS,CAAC,EAAE;IAClD;EACF;;EAEA;EACA,IAAMgE,YAAY,GAAGrE,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAACiE,QAAQ;EAChEtE,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAACiE,QAAQ,GAAG,SAASA,QAAQ,GAAG;IAChE,IAAIlC,SAAS,CAACsC,MAAM,GAAG,CAAC,IACpBtC,SAAS,CAAC,CAAC,CAAC,YAAYpC,MAAM,CAAC0G,gBAAgB,EAAE;MACnD,IAAMhF,KAAK,GAAGU,SAAS,CAAC,CAAC,CAAC;MAC1B,IAAIiB,MAAM;MACV,IAAI/B,QAAQ;MACZ,IAAIqF,GAAG;MACP,IAAI,CAAC3D,UAAU,EAAE,CAACd,OAAO,CAAC,UAAA8B,CAAC,EAAI;QAC7B,IAAIA,CAAC,CAACtC,KAAK,KAAKA,KAAK,EAAE;UACrB,IAAI2B,MAAM,EAAE;YACVsD,GAAG,GAAG,IAAI;UACZ,CAAC,MAAM;YACLtD,MAAM,GAAGW,CAAC;UACZ;QACF;MACF,CAAC,CAAC;MACF,IAAI,CAACzC,YAAY,EAAE,CAACW,OAAO,CAAC,UAAAT,CAAC,EAAI;QAC/B,IAAIA,CAAC,CAACC,KAAK,KAAKA,KAAK,EAAE;UACrB,IAAIJ,QAAQ,EAAE;YACZqF,GAAG,GAAG,IAAI;UACZ,CAAC,MAAM;YACLrF,QAAQ,GAAGG,CAAC;UACd;QACF;QACA,OAAOA,CAAC,CAACC,KAAK,KAAKA,KAAK;MAC1B,CAAC,CAAC;MACF,IAAIiF,GAAG,IAAKtD,MAAM,IAAI/B,QAAS,EAAE;QAC/B,OAAO0E,OAAO,CAACE,MAAM,CAAC,IAAIU,YAAY,CACpC,2DAA2D,EAC3D,oBAAoB,CAAC,CAAC;MAC1B,CAAC,MAAM,IAAIvD,MAAM,EAAE;QACjB,OAAOA,MAAM,CAACiB,QAAQ,EAAE;MAC1B,CAAC,MAAM,IAAIhD,QAAQ,EAAE;QACnB,OAAOA,QAAQ,CAACgD,QAAQ,EAAE;MAC5B;MACA,OAAO0B,OAAO,CAACE,MAAM,CAAC,IAAIU,YAAY,CACpC,+CAA+C,EAC/C,oBAAoB,CAAC,CAAC;IAC1B;IACA,OAAOvC,YAAY,CAAClC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;EAC5C,CAAC;AACH;AAEA,OAAO,SAASyE,iCAAiC,CAAC7G,MAAM,EAAE;EACxD;EACA;EACA;EACAA,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAACyG,eAAe,GAChD,SAASA,eAAe,GAAG;IAAA;IACzB,IAAI,CAACC,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,IAAI,CAAC,CAAC;IAC3D,OAAOzG,MAAM,CAACsF,IAAI,CAAC,IAAI,CAACmB,oBAAoB,CAAC,CAC1ClB,GAAG,CAAC,UAAAmB,QAAQ;MAAA,OAAI,MAAI,CAACD,oBAAoB,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAA,EAAC;EAC5D,CAAC;EAEH,IAAM7D,YAAY,GAAGnD,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAAC+C,QAAQ;EAChEpD,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAAC+C,QAAQ,GACzC,SAASA,QAAQ,CAAC1B,KAAK,EAAEN,MAAM,EAAE;IAC/B,IAAI,CAACA,MAAM,EAAE;MACX,OAAO+B,YAAY,CAAChB,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IAC5C;IACA,IAAI,CAAC2E,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,IAAI,CAAC,CAAC;IAE3D,IAAM1D,MAAM,GAAGF,YAAY,CAAChB,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IAClD,IAAI,CAAC,IAAI,CAAC2E,oBAAoB,CAAC3F,MAAM,CAACO,EAAE,CAAC,EAAE;MACzC,IAAI,CAACoF,oBAAoB,CAAC3F,MAAM,CAACO,EAAE,CAAC,GAAG,CAACP,MAAM,EAAEiC,MAAM,CAAC;IACzD,CAAC,MAAM,IAAI,IAAI,CAAC0D,oBAAoB,CAAC3F,MAAM,CAACO,EAAE,CAAC,CAAC+B,OAAO,CAACL,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;MACtE,IAAI,CAAC0D,oBAAoB,CAAC3F,MAAM,CAACO,EAAE,CAAC,CAAC2B,IAAI,CAACD,MAAM,CAAC;IACnD;IACA,OAAOA,MAAM;EACf,CAAC;EAEH,IAAMO,aAAa,GAAG5D,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAACwD,SAAS;EAClE7D,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAACwD,SAAS,GAAG,SAASA,SAAS,CAACzC,MAAM,EAAE;IAAA;IACxE,IAAI,CAAC2F,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,IAAI,CAAC,CAAC;IAE3D3F,MAAM,CAACa,SAAS,EAAE,CAACC,OAAO,CAAC,UAAAR,KAAK,EAAI;MAClC,IAAMuF,aAAa,GAAG,MAAI,CAACjE,UAAU,EAAE,CAACxB,IAAI,CAAC,UAAAwC,CAAC;QAAA,OAAIA,CAAC,CAACtC,KAAK,KAAKA,KAAK;MAAA,EAAC;MACpE,IAAIuF,aAAa,EAAE;QACjB,MAAM,IAAIL,YAAY,CAAC,uBAAuB,EAC1C,oBAAoB,CAAC;MAC3B;IACF,CAAC,CAAC;IACF,IAAMM,eAAe,GAAG,IAAI,CAAClE,UAAU,EAAE;IACzCY,aAAa,CAACzB,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IACpC,IAAM+E,UAAU,GAAG,IAAI,CAACnE,UAAU,EAAE,CACjCoE,MAAM,CAAC,UAAAC,SAAS;MAAA,OAAIH,eAAe,CAACxD,OAAO,CAAC2D,SAAS,CAAC,KAAK,CAAC,CAAC;IAAA,EAAC;IACjE,IAAI,CAACN,oBAAoB,CAAC3F,MAAM,CAACO,EAAE,CAAC,GAAG,CAACP,MAAM,CAAC,CAACkG,MAAM,CAACH,UAAU,CAAC;EACpE,CAAC;EAED,IAAMrD,gBAAgB,GAAG9D,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAAC0D,YAAY;EACxE/D,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAAC0D,YAAY,GAC7C,SAASA,YAAY,CAAC3C,MAAM,EAAE;IAC5B,IAAI,CAAC2F,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,IAAI,CAAC,CAAC;IAC3D,OAAO,IAAI,CAACA,oBAAoB,CAAC3F,MAAM,CAACO,EAAE,CAAC;IAC3C,OAAOmC,gBAAgB,CAAC3B,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;EAChD,CAAC;EAEH,IAAMmB,eAAe,GAAGvD,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAACmD,WAAW;EACtExD,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAACmD,WAAW,GAC5C,SAASA,WAAW,CAACH,MAAM,EAAE;IAAA;IAC3B,IAAI,CAAC0D,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,IAAI,CAAC,CAAC;IAC3D,IAAI1D,MAAM,EAAE;MACV/C,MAAM,CAACsF,IAAI,CAAC,IAAI,CAACmB,oBAAoB,CAAC,CAAC7E,OAAO,CAAC,UAAA8E,QAAQ,EAAI;QACzD,IAAMvD,GAAG,GAAG,OAAI,CAACsD,oBAAoB,CAACC,QAAQ,CAAC,CAACtD,OAAO,CAACL,MAAM,CAAC;QAC/D,IAAII,GAAG,KAAK,CAAC,CAAC,EAAE;UACd,OAAI,CAACsD,oBAAoB,CAACC,QAAQ,CAAC,CAACrD,MAAM,CAACF,GAAG,EAAE,CAAC,CAAC;QACpD;QACA,IAAI,OAAI,CAACsD,oBAAoB,CAACC,QAAQ,CAAC,CAACtC,MAAM,KAAK,CAAC,EAAE;UACpD,OAAO,OAAI,CAACqC,oBAAoB,CAACC,QAAQ,CAAC;QAC5C;MACF,CAAC,CAAC;IACJ;IACA,OAAOzD,eAAe,CAACpB,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;EAC/C,CAAC;AACL;AAEA,OAAO,SAASmF,uBAAuB,CAACvH,MAAM,EAAEwH,cAAc,EAAE;EAC9D,IAAI,CAACxH,MAAM,CAACI,iBAAiB,EAAE;IAC7B;EACF;EACA;EACA,IAAIJ,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAAC+C,QAAQ,IAC3CoE,cAAc,CAACC,OAAO,IAAI,EAAE,EAAE;IAChC,OAAOZ,iCAAiC,CAAC7G,MAAM,CAAC;EAClD;;EAEA;EACA;EACA,IAAM0H,mBAAmB,GAAG1H,MAAM,CAACI,iBAAiB,CAACC,SAAS,CACzDyG,eAAe;EACpB9G,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAACyG,eAAe,GAChD,SAASA,eAAe,GAAG;IAAA;IACzB,IAAMa,aAAa,GAAGD,mBAAmB,CAACvF,KAAK,CAAC,IAAI,CAAC;IACrD,IAAI,CAACyF,eAAe,GAAG,IAAI,CAACA,eAAe,IAAI,CAAC,CAAC;IACjD,OAAOD,aAAa,CAAC9B,GAAG,CAAC,UAAAzE,MAAM;MAAA,OAAI,OAAI,CAACwG,eAAe,CAACxG,MAAM,CAACO,EAAE,CAAC;IAAA,EAAC;EACrE,CAAC;EAEH,IAAMiC,aAAa,GAAG5D,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAACwD,SAAS;EAClE7D,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAACwD,SAAS,GAAG,SAASA,SAAS,CAACzC,MAAM,EAAE;IAAA;IACxE,IAAI,CAACyG,QAAQ,GAAG,IAAI,CAACA,QAAQ,IAAI,CAAC,CAAC;IACnC,IAAI,CAACD,eAAe,GAAG,IAAI,CAACA,eAAe,IAAI,CAAC,CAAC;IAEjDxG,MAAM,CAACa,SAAS,EAAE,CAACC,OAAO,CAAC,UAAAR,KAAK,EAAI;MAClC,IAAMuF,aAAa,GAAG,OAAI,CAACjE,UAAU,EAAE,CAACxB,IAAI,CAAC,UAAAwC,CAAC;QAAA,OAAIA,CAAC,CAACtC,KAAK,KAAKA,KAAK;MAAA,EAAC;MACpE,IAAIuF,aAAa,EAAE;QACjB,MAAM,IAAIL,YAAY,CAAC,uBAAuB,EAC1C,oBAAoB,CAAC;MAC3B;IACF,CAAC,CAAC;IACF;IACA;IACA,IAAI,CAAC,IAAI,CAACgB,eAAe,CAACxG,MAAM,CAACO,EAAE,CAAC,EAAE;MACpC,IAAMmG,SAAS,GAAG,IAAI9H,MAAM,CAACC,WAAW,CAACmB,MAAM,CAACa,SAAS,EAAE,CAAC;MAC5D,IAAI,CAAC4F,QAAQ,CAACzG,MAAM,CAACO,EAAE,CAAC,GAAGmG,SAAS;MACpC,IAAI,CAACF,eAAe,CAACE,SAAS,CAACnG,EAAE,CAAC,GAAGP,MAAM;MAC3CA,MAAM,GAAG0G,SAAS;IACpB;IACAlE,aAAa,CAACzB,KAAK,CAAC,IAAI,EAAE,CAACf,MAAM,CAAC,CAAC;EACrC,CAAC;EAED,IAAM0C,gBAAgB,GAAG9D,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAAC0D,YAAY;EACxE/D,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAAC0D,YAAY,GAC7C,SAASA,YAAY,CAAC3C,MAAM,EAAE;IAC5B,IAAI,CAACyG,QAAQ,GAAG,IAAI,CAACA,QAAQ,IAAI,CAAC,CAAC;IACnC,IAAI,CAACD,eAAe,GAAG,IAAI,CAACA,eAAe,IAAI,CAAC,CAAC;IAEjD9D,gBAAgB,CAAC3B,KAAK,CAAC,IAAI,EAAE,CAAE,IAAI,CAAC0F,QAAQ,CAACzG,MAAM,CAACO,EAAE,CAAC,IAAIP,MAAM,CAAE,CAAC;IACpE,OAAO,IAAI,CAACwG,eAAe,CAAE,IAAI,CAACC,QAAQ,CAACzG,MAAM,CAACO,EAAE,CAAC,GACjD,IAAI,CAACkG,QAAQ,CAACzG,MAAM,CAACO,EAAE,CAAC,CAACA,EAAE,GAAGP,MAAM,CAACO,EAAE,CAAE;IAC7C,OAAO,IAAI,CAACkG,QAAQ,CAACzG,MAAM,CAACO,EAAE,CAAC;EACjC,CAAC;EAEH3B,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAAC+C,QAAQ,GACzC,SAASA,QAAQ,CAAC1B,KAAK,EAAEN,MAAM,EAAE;IAAA;IAC/B,IAAI,IAAI,CAAC2G,cAAc,KAAK,QAAQ,EAAE;MACpC,MAAM,IAAInB,YAAY,CACpB,wDAAwD,EACxD,mBAAmB,CAAC;IACxB;IACA,IAAM7E,OAAO,GAAG,EAAE,CAACmB,KAAK,CAAC8E,IAAI,CAAC5F,SAAS,EAAE,CAAC,CAAC;IAC3C,IAAIL,OAAO,CAAC2C,MAAM,KAAK,CAAC,IACpB,CAAC3C,OAAO,CAAC,CAAC,CAAC,CAACE,SAAS,EAAE,CAACT,IAAI,CAAC,UAAAyG,CAAC;MAAA,OAAIA,CAAC,KAAKvG,KAAK;IAAA,EAAC,EAAE;MAClD;MACA;MACA,MAAM,IAAIkF,YAAY,CACpB,0DAA0D,GAC1D,uDAAuD,EACvD,mBAAmB,CAAC;IACxB;IAEA,IAAMK,aAAa,GAAG,IAAI,CAACjE,UAAU,EAAE,CAACxB,IAAI,CAAC,UAAAwC,CAAC;MAAA,OAAIA,CAAC,CAACtC,KAAK,KAAKA,KAAK;IAAA,EAAC;IACpE,IAAIuF,aAAa,EAAE;MACjB,MAAM,IAAIL,YAAY,CAAC,uBAAuB,EAC1C,oBAAoB,CAAC;IAC3B;IAEA,IAAI,CAACiB,QAAQ,GAAG,IAAI,CAACA,QAAQ,IAAI,CAAC,CAAC;IACnC,IAAI,CAACD,eAAe,GAAG,IAAI,CAACA,eAAe,IAAI,CAAC,CAAC;IACjD,IAAMM,SAAS,GAAG,IAAI,CAACL,QAAQ,CAACzG,MAAM,CAACO,EAAE,CAAC;IAC1C,IAAIuG,SAAS,EAAE;MACb;MACA;MACA;MACA;MACAA,SAAS,CAAC9E,QAAQ,CAAC1B,KAAK,CAAC;;MAEzB;MACAsE,OAAO,CAACC,OAAO,EAAE,CAACE,IAAI,CAAC,YAAM;QAC3B,OAAI,CAACnE,aAAa,CAAC,IAAIH,KAAK,CAAC,mBAAmB,CAAC,CAAC;MACpD,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,IAAMiG,SAAS,GAAG,IAAI9H,MAAM,CAACC,WAAW,CAAC,CAACyB,KAAK,CAAC,CAAC;MACjD,IAAI,CAACmG,QAAQ,CAACzG,MAAM,CAACO,EAAE,CAAC,GAAGmG,SAAS;MACpC,IAAI,CAACF,eAAe,CAACE,SAAS,CAACnG,EAAE,CAAC,GAAGP,MAAM;MAC3C,IAAI,CAACyC,SAAS,CAACiE,SAAS,CAAC;IAC3B;IACA,OAAO,IAAI,CAAC9E,UAAU,EAAE,CAACxB,IAAI,CAAC,UAAAwC,CAAC;MAAA,OAAIA,CAAC,CAACtC,KAAK,KAAKA,KAAK;IAAA,EAAC;EACvD,CAAC;;EAEH;EACA;EACA,SAASyG,uBAAuB,CAAC1F,EAAE,EAAE2F,WAAW,EAAE;IAChD,IAAIC,GAAG,GAAGD,WAAW,CAACC,GAAG;IACzB/H,MAAM,CAACsF,IAAI,CAACnD,EAAE,CAACmF,eAAe,IAAI,EAAE,CAAC,CAAC1F,OAAO,CAAC,UAAAoG,UAAU,EAAI;MAC1D,IAAMC,cAAc,GAAG9F,EAAE,CAACmF,eAAe,CAACU,UAAU,CAAC;MACrD,IAAME,cAAc,GAAG/F,EAAE,CAACoF,QAAQ,CAACU,cAAc,CAAC5G,EAAE,CAAC;MACrD0G,GAAG,GAAGA,GAAG,CAACI,OAAO,CAAC,IAAIC,MAAM,CAACF,cAAc,CAAC7G,EAAE,EAAE,GAAG,CAAC,EAChD4G,cAAc,CAAC5G,EAAE,CAAC;IACxB,CAAC,CAAC;IACF,OAAO,IAAIgH,qBAAqB,CAAC;MAC/BxD,IAAI,EAAEiD,WAAW,CAACjD,IAAI;MACtBkD,GAAG,EAAHA;IACF,CAAC,CAAC;EACJ;EACA,SAASO,uBAAuB,CAACnG,EAAE,EAAE2F,WAAW,EAAE;IAChD,IAAIC,GAAG,GAAGD,WAAW,CAACC,GAAG;IACzB/H,MAAM,CAACsF,IAAI,CAACnD,EAAE,CAACmF,eAAe,IAAI,EAAE,CAAC,CAAC1F,OAAO,CAAC,UAAAoG,UAAU,EAAI;MAC1D,IAAMC,cAAc,GAAG9F,EAAE,CAACmF,eAAe,CAACU,UAAU,CAAC;MACrD,IAAME,cAAc,GAAG/F,EAAE,CAACoF,QAAQ,CAACU,cAAc,CAAC5G,EAAE,CAAC;MACrD0G,GAAG,GAAGA,GAAG,CAACI,OAAO,CAAC,IAAIC,MAAM,CAACH,cAAc,CAAC5G,EAAE,EAAE,GAAG,CAAC,EAChD6G,cAAc,CAAC7G,EAAE,CAAC;IACxB,CAAC,CAAC;IACF,OAAO,IAAIgH,qBAAqB,CAAC;MAC/BxD,IAAI,EAAEiD,WAAW,CAACjD,IAAI;MACtBkD,GAAG,EAAHA;IACF,CAAC,CAAC;EACJ;EACA,CAAC,aAAa,EAAE,cAAc,CAAC,CAACnG,OAAO,CAAC,UAAS2G,MAAM,EAAE;IACvD,IAAMC,YAAY,GAAG9I,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAACwI,MAAM,CAAC;IAC/D,IAAME,SAAS,uBAAKF,MAAM,cAAI;MAAA;MAC5B,IAAMG,IAAI,GAAG5G,SAAS;MACtB,IAAM6G,YAAY,GAAG7G,SAAS,CAACsC,MAAM,IACjC,OAAOtC,SAAS,CAAC,CAAC,CAAC,KAAK,UAAU;MACtC,IAAI6G,YAAY,EAAE;QAChB,OAAOH,YAAY,CAAC3G,KAAK,CAAC,IAAI,EAAE,CAC9B,UAACiG,WAAW,EAAK;UACf,IAAMc,IAAI,GAAGf,uBAAuB,CAAC,OAAI,EAAEC,WAAW,CAAC;UACvDY,IAAI,CAAC,CAAC,CAAC,CAAC7G,KAAK,CAAC,IAAI,EAAE,CAAC+G,IAAI,CAAC,CAAC;QAC7B,CAAC,EACD,UAACvC,GAAG,EAAK;UACP,IAAIqC,IAAI,CAAC,CAAC,CAAC,EAAE;YACXA,IAAI,CAAC,CAAC,CAAC,CAAC7G,KAAK,CAAC,IAAI,EAAEwE,GAAG,CAAC;UAC1B;QACF,CAAC,EAAEvE,SAAS,CAAC,CAAC,CAAC,CAChB,CAAC;MACJ;MACA,OAAO0G,YAAY,CAAC3G,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,CACzC+D,IAAI,CAAC,UAAAiC,WAAW;QAAA,OAAID,uBAAuB,CAAC,OAAI,EAAEC,WAAW,CAAC;MAAA,EAAC;IAClE,CAAC,CAAC;IACFpI,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAACwI,MAAM,CAAC,GAAGE,SAAS,CAACF,MAAM,CAAC;EAChE,CAAC,CAAC;EAEF,IAAMM,uBAAuB,GACzBnJ,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAAC+I,mBAAmB;EAC1DpJ,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAAC+I,mBAAmB,GACpD,SAASA,mBAAmB,GAAG;IAC7B,IAAI,CAAChH,SAAS,CAACsC,MAAM,IAAI,CAACtC,SAAS,CAAC,CAAC,CAAC,CAAC+C,IAAI,EAAE;MAC3C,OAAOgE,uBAAuB,CAAChH,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IACvD;IACAA,SAAS,CAAC,CAAC,CAAC,GAAGwG,uBAAuB,CAAC,IAAI,EAAExG,SAAS,CAAC,CAAC,CAAC,CAAC;IAC1D,OAAO+G,uBAAuB,CAAChH,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;EACvD,CAAC;;EAEH;;EAEA,IAAMiH,oBAAoB,GAAG/I,MAAM,CAACgJ,wBAAwB,CACxDtJ,MAAM,CAACI,iBAAiB,CAACC,SAAS,EAAE,kBAAkB,CAAC;EAC3DC,MAAM,CAACC,cAAc,CAACP,MAAM,CAACI,iBAAiB,CAACC,SAAS,EACpD,kBAAkB,EAAE;IAClBG,GAAG,iBAAG;MACJ,IAAM4H,WAAW,GAAGiB,oBAAoB,CAAC7I,GAAG,CAAC2B,KAAK,CAAC,IAAI,CAAC;MACxD,IAAIiG,WAAW,CAACjD,IAAI,KAAK,EAAE,EAAE;QAC3B,OAAOiD,WAAW;MACpB;MACA,OAAOD,uBAAuB,CAAC,IAAI,EAAEC,WAAW,CAAC;IACnD;EACF,CAAC,CAAC;EAENpI,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAACmD,WAAW,GAC5C,SAASA,WAAW,CAACH,MAAM,EAAE;IAAA;IAC3B,IAAI,IAAI,CAAC0E,cAAc,KAAK,QAAQ,EAAE;MACpC,MAAM,IAAInB,YAAY,CACpB,wDAAwD,EACxD,mBAAmB,CAAC;IACxB;IACA;IACA;IACA,IAAI,CAACvD,MAAM,CAACN,GAAG,EAAE;MACf,MAAM,IAAI6D,YAAY,CAAC,8CAA8C,GACjE,4CAA4C,EAAE,WAAW,CAAC;IAChE;IACA,IAAM2C,OAAO,GAAGlG,MAAM,CAACN,GAAG,KAAK,IAAI;IACnC,IAAI,CAACwG,OAAO,EAAE;MACZ,MAAM,IAAI3C,YAAY,CAAC,4CAA4C,EAC/D,oBAAoB,CAAC;IAC3B;;IAEA;IACA,IAAI,CAACiB,QAAQ,GAAG,IAAI,CAACA,QAAQ,IAAI,CAAC,CAAC;IACnC,IAAIzG,MAAM;IACVd,MAAM,CAACsF,IAAI,CAAC,IAAI,CAACiC,QAAQ,CAAC,CAAC3F,OAAO,CAAC,UAAAsH,QAAQ,EAAI;MAC7C,IAAMC,QAAQ,GAAG,OAAI,CAAC5B,QAAQ,CAAC2B,QAAQ,CAAC,CAACvH,SAAS,EAAE,CACjDT,IAAI,CAAC,UAAAE,KAAK;QAAA,OAAI2B,MAAM,CAAC3B,KAAK,KAAKA,KAAK;MAAA,EAAC;MACxC,IAAI+H,QAAQ,EAAE;QACZrI,MAAM,GAAG,OAAI,CAACyG,QAAQ,CAAC2B,QAAQ,CAAC;MAClC;IACF,CAAC,CAAC;IAEF,IAAIpI,MAAM,EAAE;MACV,IAAIA,MAAM,CAACa,SAAS,EAAE,CAACyC,MAAM,KAAK,CAAC,EAAE;QACnC;QACA;QACA,IAAI,CAACX,YAAY,CAAC,IAAI,CAAC6D,eAAe,CAACxG,MAAM,CAACO,EAAE,CAAC,CAAC;MACpD,CAAC,MAAM;QACL;QACAP,MAAM,CAACoC,WAAW,CAACH,MAAM,CAAC3B,KAAK,CAAC;MAClC;MACA,IAAI,CAACM,aAAa,CAAC,IAAIH,KAAK,CAAC,mBAAmB,CAAC,CAAC;IACpD;EACF,CAAC;AACL;AAEA,OAAO,SAAS6H,kBAAkB,CAAC1J,MAAM,EAAEwH,cAAc,EAAE;EACzD,IAAI,CAACxH,MAAM,CAACI,iBAAiB,IAAIJ,MAAM,CAAC2J,uBAAuB,EAAE;IAC/D;IACA3J,MAAM,CAACI,iBAAiB,GAAGJ,MAAM,CAAC2J,uBAAuB;EAC3D;EACA,IAAI,CAAC3J,MAAM,CAACI,iBAAiB,EAAE;IAC7B;EACF;;EAEA;EACA,IAAIoH,cAAc,CAACC,OAAO,GAAG,EAAE,EAAE;IAC/B,CAAC,qBAAqB,EAAE,sBAAsB,EAAE,iBAAiB,CAAC,CAC7DvF,OAAO,CAAC,UAAS2G,MAAM,EAAE;MACxB,IAAMC,YAAY,GAAG9I,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAACwI,MAAM,CAAC;MAC/D,IAAME,SAAS,uBAAKF,MAAM,cAAI;QAC5BzG,SAAS,CAAC,CAAC,CAAC,GAAG,KAAMyG,MAAM,KAAK,iBAAiB,GAC7C7I,MAAM,CAAC4J,eAAe,GACtB5J,MAAM,CAAC2I,qBAAqB,EAAEvG,SAAS,CAAC,CAAC,CAAC,CAAC;QAC/C,OAAO0G,YAAY,CAAC3G,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;MAC5C,CAAC,CAAC;MACFpC,MAAM,CAACI,iBAAiB,CAACC,SAAS,CAACwI,MAAM,CAAC,GAAGE,SAAS,CAACF,MAAM,CAAC;IAChE,CAAC,CAAC;EACR;AACF;;AAEA;AACA,OAAO,SAASgB,oBAAoB,CAAC7J,MAAM,EAAEwH,cAAc,EAAE;EAC3D5H,KAAK,CAACyC,uBAAuB,CAACrC,MAAM,EAAE,mBAAmB,EAAE,UAAAmB,CAAC,EAAI;IAC9D,IAAMsB,EAAE,GAAGtB,CAAC,CAAC2I,MAAM;IACnB,IAAItC,cAAc,CAACC,OAAO,GAAG,EAAE,IAAKhF,EAAE,CAACsH,gBAAgB,IACnDtH,EAAE,CAACsH,gBAAgB,EAAE,CAACC,YAAY,KAAK,QAAS,EAAE;MACpD,IAAIvH,EAAE,CAACsF,cAAc,KAAK,QAAQ,EAAE;QAClC;MACF;IACF;IACA,OAAO5G,CAAC;EACV,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}